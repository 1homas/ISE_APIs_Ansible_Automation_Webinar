---
#
# Demonstrates the use of:
# - use of a credentials file
# - ansible.builtin.uri module from localhost
# - multiple tasks with conditional output
#
- name: Enable ISE REST APIs
  hosts: localhost
  vars_files:
    - credentials.yaml
  gather_facts: no
  tasks:


  - name: Enable ISE OpenAPIs (ISE 3.1+)
    ansible.builtin.uri:
      url: "https://{{ ise_hostname }}/admin/API/apiService/update"
      method: POST
      url_username: "{{ ise_username }}"
      url_password: "{{ ise_password }}"
      force_basic_auth: yes
      body: '{ "papIsEnabled":true, "psnsIsEnabled":true }'
      status_code: 200,500
      body_format: json
      validate_certs: no
      return_content: true
    register: response


  - name: ISE OpenAPIs Enabled Status
    ansible.builtin.debug: 
      msg : "✅ ISE OpenAPIs Enabled"
    when: (response.status == 200) or (response.content.find('already enabled') != -1)


  - name: ISE OpenAPIs Disabled Status
    ansible.builtin.debug: 
      msg : "❌ ISE OpenAPIs Disabled"
    when: (response.status != 200) and (response.status != 500)


  - name: Enable ISE ERS APIs
    ansible.builtin.uri:
      url: "https://{{ ise_hostname }}/admin/API/NetworkAccessConfig/ERS"
      method: PUT
      url_username: "{{ ise_username }}"
      url_password: "{{ ise_password }}"
      force_basic_auth: yes
      headers:
        Accept: application/xml
        Content-Type: application/xml
      body: '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ersConfig>
    <id>1</id><isCSRFCheck>false</isCSRFCheck><isPapEnabled>true</isPapEnabled><isPsnsEnabled>true</isPsnsEnabled></ersConfig>'
      status_code: 200
      validate_certs: no
      return_content: true
    register: response


  - name: ISE ERS Enabled Status
    ansible.builtin.debug: 
      msg : "✅ ISE ERS APIs Enabled"
    when: response.status == 200


  - name: ISE ERS Disabled Status
    ansible.builtin.debug: 
      msg : "❌ ISE ERS APIs Disabled"
    when: response.status != 200

