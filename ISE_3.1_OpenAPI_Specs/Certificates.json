{"openapi":"3.0.3","info":{"title":"Cisco ISE API - Certificates","version":"1.0.0"},"servers":[{"url":"https://ise.securitydemo.net:443","description":"Inferred Url"}],"tags":[{"name":"certs-api-controller","description":"the certs API"}],"paths":{"/api/v1/certs/certificate-signing-request":{"get":{"tags":["Certificates"],"summary":"Purpose of the API is to get all Certificate Signing Requests from PAN.","description":"<p style=\"font-size: 15px;\"> This API supports Filtering, Sorting and Pagination. </p><br/> <p style=\"font-size: 14px;\">Filtering and Sorting supported on below mentioned attributes: </p>    <ul style=\"font-size: 14px;\">        <li>friendlyName</li>        <li>subject</li>        <li>timeStamp</li>          <ul>            <li>Supported Date Format: yyyy-MM-dd HH:mm:ss.SSS</li>            <li>Supported Operators: EQ, NEQ, GT and LT</li>          </ul>      </ul> ","operationId":"getCSRs","parameters":[{"name":"page","in":"query","description":"Page number","required":false,"style":"form","schema":{"type":"integer","format":"int32"}},{"name":"size","in":"query","description":"Number of objects returned per page","required":false,"style":"form","schema":{"type":"integer","format":"int32"}},{"name":"sort","in":"query","description":"sort type - asc or desc","required":false,"style":"form","schema":{"type":"string","enum":["asc","desc"]}},{"name":"sortBy","in":"query","description":"sort column by which objects needs to be sorted","required":false,"style":"form","schema":{"type":"string"}},{"name":"filter","in":"query","description":"<div> <style type=\"text/css\" scoped> .apiServiceTable td, .apiServiceTable th { padding: 5px 10px !important; text-align: left; } </style> <span> <b>Simple filtering</b> should be available through the filter query string parameter. The structure of a filter is a triplet of field operator and value separated with dots. More than one filter can be sent. The logical operator common to ALL filter criteria will be by default AND, and can be changed by using the <i>\"filterType=or\"</i> query string parameter. Each resource Data model description should specify if an attribute is a filtered field. </span> <br /> <table class=\"apiServiceTable\"> <thead> <tr> <th>OPERATOR</th> <th>DESCRIPTION</th> </tr> </thead> <tbody> <tr> <td>EQ</td> <td>Equals</td> </tr> <tr> <td>NEQ</td> <td>Not Equals</td> </tr> <tr> <td>GT</td> <td>Greater Than</td> </tr> <tr> <td>LT</td> <td>Less Then</td> </tr> <tr> <td>STARTSW</td> <td>Starts With</td> </tr> <tr> <td>NSTARTSW</td> <td>Not Starts With</td> </tr> <tr> <td>ENDSW</td> <td>Ends With</td> </tr> <tr> <td>NENDSW</td> <td>Not Ends With</td> </tr> <tr> <td>CONTAINS</td> <td>Contains</td> </tr> <tr> <td>NCONTAINS</td> <td>Not Contains</td> </tr> </tbody> </table> </div>","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"filterType","in":"query","description":"The logical operator common to ALL filter criteria will be by default AND, and can be changed by using the parameter","required":false,"style":"form","schema":{"type":"string","enum":["AND","OR"]}}],"responses":{"200":{"description":"A paged array of Certificate Signing Requests.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CSRGetAllRsp"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"BasicAuth":[]}]},"post":{"tags":["Certificates"],"summary":"Purpose of this API is to generate a Certificate Signing Request (CSR).","description":"<div> <style type=\"text/css\" scoped> .certTable td , .certTable th { padding: 5px 10px !important; text-align: left;} </style> <h3>Generate a certificate signing request for Multi-Use, Admin, EAP Authentication, RADIUS DTLS, PxGrid, SAML, Portal and IMS Services.</h3> <span>Following Parameters are present in POST request body</span><br> <table class=\"certTable\"> <thead> <tr> <th>PARAMETER</th> <th>DESCRIPTION</th> <th>EXAMPLE</th> </tr> </thead> <tbody> <tr> <td>hostnames</td> <td>List of ise node hostnames for which CSRs should be generated</td> <td>[ise-host1, ise-host2]</td> </tr> <tr> <td>allowWildCardCert</td> <td>Allow use of WildCards in certificates</td> <td>false</td> </tr> <tr> <td>keyLength</td> <td>Length of the Key used for CSR generation (required)</td> <td>512</td> </tr> <tr> <td>keyType</td> <td>Type of key used for CSR generation either RSA or ECDSA(required)</td> <td>RSA</td> </tr> <tr> <td>digestType</td> <td>Hash algorithm used for signing CSR(required)</td> <td>SHA-256</td> </tr> <tr> <td>usedFor</td> <td>Certificate Usage(required)</td> <td>MULTI-USE</td> </tr> <tr> <td>subjectCommonName</td> <td>Certificate common name(CN)(required)</td> <td>$FQDN$</td> </tr> <tr> <td>subjectOrgUnit</td> <td>Certificate organizational unit(OU)</td> <td>Engineering</td> </tr> <tr> <td>subjectOrg</td> <td>Certificate organization (O)</td> <td>Cisco</td> </tr> <tr> <td>subjectCity</td> <td>Certificate city or locality (L)</td> <td>San Jose</td> </tr> <td>subjectState</td> <td>Certificate state (ST)</td> <td>California</td> </tr> <tr> <td>subjectCountry</td> <td>Certificate country ( C)</td> <td>US</td> </tr> <tr> <td>sanDNS</td> <td>Array of SAN(Subject Alternative Name) DNS entries(optional)</td> <td>[ise.example.com]</td> </tr> <td>sanIP</td> <td>Array of SAN IP entries(optional)</td> <td>[1.1.1.1]</td> </tr> <tr> <td>sanURI</td> <td>Array of SAN URI entries(optional)</td> <td>[https://1.1.1.1]</td> </tr> <tr> <td>sanDir</td> <td>Array of SAN DIR entries(optional)</td> <td>[CN=AAA,DC=COM,C=IL]</td> </tr> <tr> <td>portalGroupTag</td> <td>Portal Group Tag when using certificate for PORTAL service</td> <td>Default Portal Certificate Group</td> </tr> </tbody> </table></br> <span><b>NOTE: </b>For allowWildCardCert to be false, the below mentioned parameter is mandatory:</br> <i>- hostnames </i></br> <p>When Certificate is selected to be used for Portal Service, the below mentioned parameter is mandatory:</br> <i>- portalGroupTag</i></br></p></span> <hr/> <div>","operationId":"generateCSR","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CSRRequest"}}}},"responses":{"200":{"description":"Generated CSR","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenerateCSRRespPayload"}}}},"201":{"description":"Created"},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"405":{"description":"Invalid Input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/certs/certificate-signing-request/export/{hostname}/{id}":{"get":{"tags":["Certificates"],"summary":"Purpose of the API is to export a CSR, given a CSR id and a hostname.","description":"<h3>The response of this API carries a CSR corresponding to the requested ID</h3>","operationId":"exportCSR","parameters":[{"name":"hostname","in":"path","description":"The hostname to which the CSR belongs.","required":true,"style":"simple","schema":{"type":"string"}},{"name":"id","in":"path","description":"The ID of the CSR to be exported.","required":true,"style":"simple","schema":{"type":"string"}}],"responses":{"200":{"description":"Exported CSR successfully","content":{"application/octet-stream":{"schema":{"$ref":"#/components/schemas/Resource"}},"application/json":{"schema":{"$ref":"#/components/schemas/Resource"}}}},"400":{"description":"Bad Request","content":{"application/octet-stream":{"schema":{"$ref":"#/components/schemas/ExportCSRFailRespPayload"}},"application/json":{"schema":{"$ref":"#/components/schemas/ExportCSRFailRespPayload"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"BasicAuth":[]}]}},"/api/v1/certs/certificate-signing-request/intermediate-ca":{"post":{"tags":["Certificates"],"summary":"Purpose of this API is to generate a Intermediate CA Certificate Signing Request (CSR).","description":"CSR Generation for Intermediate Certificates.","operationId":"generateIntermediateCACsr","responses":{"200":{"description":"Generated ISE Intermediate CA CSR","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenerateIntermediateCACsrRespPayload"}}}},"201":{"description":"Created"},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/certs/certificate-signing-request/{hostName}/{id}":{"get":{"tags":["Certificates"],"summary":"Purpose of the API is to get Certificate Signing Request(CSR) by ID","description":"This API displays details of a Certificate Signing Request of a particular node based on a given HostName and ID.","operationId":"getCSRById","parameters":[{"name":"hostName","in":"path","description":"Name of the host of which CSR's should be returned","required":true,"style":"simple","schema":{"type":"string"}},{"name":"id","in":"path","description":"The ID of the Certificate Signing Request returned","required":true,"style":"simple","schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the CSR of the given id.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CSRGetByIdRsp"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"BasicAuth":[]}]},"delete":{"tags":["Certificates"],"summary":"Purpose of the API is to delete Certificate Signing Request(CSR) by ID","description":"This API deletes a Certificate Signing Request of a particular node based on a given HostName and ID.","operationId":"deleteCSR","parameters":[{"name":"hostName","in":"path","description":"Name of the host of which CSR's should be deleted","required":true,"style":"simple","schema":{"type":"string"}},{"name":"id","in":"path","description":"The ID of the Certificate Signing Request to be deleted","required":true,"style":"simple","schema":{"type":"string"}}],"responses":{"200":{"description":"Deleted the CSR of the given id.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteCSRRespPayload"}}}},"204":{"description":"No Content"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}},"security":[{"BasicAuth":[]}]}},"/api/v1/certs/ise-root-ca/regenerate":{"post":{"tags":["Certificates"],"summary":"Purpose of this API is to regenerate the entire internal CA certificate chain including the root CA on the Primary PAN and subordinate CAs on the PSNs(Applicable only for the internal CA service ).","description":"This API will initiate regeneration of ISE root CA certificate chain. Response contains id which can be used to track the status. <br>  Setting \"removeExistingISEIntermediateCSR\" to true will remove existing ISE Intermediate CSR","operationId":"regenerateISERootCA","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegenerateRootCA"}}}},"responses":{"200":{"description":"unexpected error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"201":{"description":"Created"},"202":{"description":"Regeneration of ISE Root CA is initiated. Please use status API to get the status.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegenerateRootCaRespPayload"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"},"405":{"description":"Invalid Input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/certs/renew-certificate":{"post":{"tags":["Certificates"],"summary":"Purpose of this API is to renew certificates of OCSP responder and ISE Messaging Service.","description":"This API will initiate regeneration of certificates. Response contains id which can be used to track the status","operationId":"renewCerts","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RenewCertificates"}}}},"responses":{"200":{"description":"unexpected error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"201":{"description":"Created"},"202":{"description":"Regeneration of Certificate is initiated. Please use status API to get the status.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RenewCertRespPayload"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"},"405":{"description":"Invalid Input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/certs/signed-certificate/bind":{"post":{"tags":["Certificates"],"summary":"Purpose of the API is to Bind CA Signed Certificate.","description":" <div> <style type=\"text/css\" scoped> .certTable td , .certTable th { padding: 5px 10px !important; text-align: left;} </style> <h3>Bind CA Signed Certificate.</h3> <span><b>NOTE: </b>This API requires an existing Certificate Signing Request, and the root certificate must already be trusted.<br /></span> <span><b>NOTE: </b>The certificate may have a validity period longer than 398 days. It may be untrusted by many browsers.</span><br> <span><b>NOTE: </b>Request Parameters accepting True and False as input can be replaced by 1 and 0 respectively. </span><br> <h4>Following Parameters are used in POST body</h4> <table class=\"certTable\"> <thead> <tr> <th>PARAMETER</th> <th>DESCRIPTION</th> <th>EXAMPLE</th> </tr> </thead> <tbody> <tr> <td>name</td> <td>Friendly name of the certificate.</td> <td>Signed Certificate</td> </tr> <tr> <td>data</td> <td>Plain-text contents of the certificate file (required)</td> <td>Signed Certificate in escaped format</td> </tr> <tr> <td>allowExtendedValidity</td> <td>Allow the certificates greater than validity of 398 days (required)</td> <td>false</td> </tr> <tr> <td>allowOutOfDateCert</td> <td>Allow out of date certificates (required)</td> <td>false</td> </tr> <tr> <td>allowReplacementOfCertificates</td> <td>Allow Replacement of certificates (required)</td> <td>false</td> </tr> <tr> <td>allowReplacementOfPortalGroupTag</td> <td>Allow Replacement of Portal Group Tag (required)</td> <td>false</td> </tr> <td>admin</td> <td>Use certificate to authenticate the ISE Admin Portal</td> <td>false</td> </tr> <tr> <td>eap</td> <td>Use certificate for EAP protocols that use SSL/TLS tunneling</td> <td>false</td> </tr> <tr> <td>radius</td> <td>Use certificate for RADSec server</td> <td>false</td> </tr> <tr> <td>pxgrid</td> <td>Use certificate for the pxGrid Controller</td> <td>false</td> </tr> <tr> <td>ims</td> <td>Use certificate for the ISE Messaging Service</td> <td>false</td> </tr> <tr> <td>saml</td> <td>Use certificate for SAML Signing</td> <td>false</td> </tr> <tr> <td>portal</td> <td>Use certificate for portal</td> <td>false</td> </tr> <tr> <td>portalGroupTag</td> <td>Portal Group Tag for using certificate with portal role</td> <td>Default Portal Certificate Group</td> </tr> <tr> <td>validateCertificateExtensions</td> <td>Validate Certificate Extensions</td> <td>false</td> </tr> </tbody> </table> <br/> <h4>Following Roles can be used in any combinations</h4> <table class=\"certTable\"> <thead> <tr> <th>ROLE</th> <th>DEFAULT</th> <th>WARNING</th> </tr> </thead> <tbody> <tr> <td>Admin</td> <td>False</td> <td>Enabling Admin role for this certificate will cause an application server restart on the selected node.<br/><b>Note:</b> Make sure required Certificate Chain is imported under Trusted Certificates</td> </tr> <tr> <td>EAP Authentication</td> <td>False</td> <td>Only one system certificate can be used for EAP. Assigning EAP to this certificate will remove the assignment from another certificate.<br/><b>Note:</b> Make sure required Certificate Chain is imported under Trusted Certificates</td> </tr> <tr> <td>RADIUS DTLS</td> <td>False</td> <td>Only one system certificate can be used for DTLS. Assigning DTLS to this certificate will remove the assignment from another certificate.<br/><b>Note:</b> Make sure required Certificate Chain is imported under Trusted Certificates</td> </tr> <tr> <td>SAML</td> <td>False</td> <td>SAML cannot be used with other Usage. Enabling SAML will uncheck all other Usage.</br><b>Note:</b> Make sure required Certificate Chain is imported under Trusted Certificates</td> </tr> </tbody> </table> <div>","operationId":"bindCSR","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BindCSRRequest"}}}},"responses":{"200":{"description":"CSR Binded Successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BindCSRRespPayload"}}}},"201":{"description":"Created"},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"404":{"description":"Not Found"}},"security":[{"BasicAuth":[]}]}},"/api/v1/certs/system-certificate/export":{"post":{"tags":["Certificates"],"summary":"Purpose of the API is to export a system certificate given a certificate id.","description":"<div> <style type=\"text/css\" scoped> .certTable td , .certTable th { padding: 5px 10px !important; text-align: left;} </style> <h3>Export System Certificate.</h3> <span>Following Parameters are used in POST body</span> <table class=\"certTable\"> <thead> <tr> <th>PARAMETER</th> <th>DESCRIPTION</th> <th>EXAMPLE</th> </tr> </thead> <tbody> <tr> <td>id</td> <td>ID of a System Certificate(required)</td> <td>&lt; SYSTEM_CERT_ID &gt;</td> </tr> <tr> <td>export</td> <td> One of the below option is required <ul> <li><b>\"CERTIFICATE\" :</b>Export only Certificate without Private Key<br/></li> <li><b>\"CERTIFICATE_WITH_PRIVATE_KEY\" :</b>Export both Certificate and Private Key(<i>\"certificatePassword\"</i> is required)</li> </ul> </td> <td>CERTIFICATE_WITH_PRIVATE_KEY</td> </tr> <tr> <td>password</td> <td>Certificate Password (required if <i>\"export\" : CERTIFICATE_WITH_PRIVATE_KEY</i>)</br> <b>Password Constraints:</b> <ul> <li>Alphanumeric</li> <li>Minimum of 8 Characters</li> <li>Maximum of 100 Characters</li> </ul> </td> <td>Passw***</td> </tr> </tbody> </table> <span> <b>NOTE: </b>The response of this API carries a ZIP file containing the certificate and private key if <i>\"export\" : \"CERTIFICATE_WITH_PRIVATE_KEY\"</i> in the request. If <i>\"export\" : \"CERTIFICATE\"</i> in request body, the response carries a ZIP file containing only the certificate. </span> <br/><br/> <span> <b>WARNING: </b>Exporting a private key is not a secure operation. It could lead to possible exposure of the private key. </span> <br/> <div>","operationId":"exportSystemCert","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExportCertRequest"}}}},"responses":{"200":{"description":"Exported Certificate successfully","content":{"application/octet-stream":{"schema":{"$ref":"#/components/schemas/Resource"}},"application/json":{"schema":{"$ref":"#/components/schemas/Resource"}}}},"201":{"description":"Created"},"400":{"description":"Bad Request","content":{"application/octet-stream":{"schema":{"$ref":"#/components/schemas/Error"}},"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"BasicAuth":[]}]}},"/api/v1/certs/system-certificate/import":{"post":{"tags":["Certificates"],"summary":"Purpose of the API is to import system certificate into ISE.","description":"<div> <style type=\"text/css\" scoped> .certTable td , .certTable th { padding: 5px 10px !important; text-align: left;} </style> <h3>Import an X509 certificate as a system certificate.</h3> <span><b>NOTE: </b>The certificate may have a validity period longer than 398 days. It may be untrusted by many browsers.</span><br> <span><b>NOTE: </b>Request Parameters accepting True and False as input can be replaced by 1 and 0 respectively. </span><br> <h4>Following Parameters are used in POST body</h4> <table class=\"certTable\"> <thead> <tr> <th>PARAMETER</th> <th>DESCRIPTION</th> <th>EXAMPLE</th> </tr> </thead> <tbody> <tr> <td>name</td> <td>Friendly name of the certificate.</td> <td>System Certificate</td> </tr> <tr> <td>password</td> <td>Password of the certificate to be imported (required).</td> <td>Passw***</td> </tr> <tr> <td>data</td> <td>Plain-text contents of the certificate file (required)</td> <td>System Certificate in escaped format</td> </tr> <tr> <td>privateKeyData</td> <td>Plain-text contents of the private key file (required)</td> <td>System Certificate Private Key in escaped format</td> </tr> <tr> <td>allowOutOfDateCert</td> <td>Allow out of date certificates (required)</td> <td>false</td> </tr> <tr> <td>allowSHA1Certificates</td> <td>Allow SHA1 based certificates (required)</td> <td>false</td> </tr> <tr> <td>allowExtendedValidity</td> <td>Allow the certificates greater than validity of 398 days (required)</td> <td>false</td> </tr> <tr> <td>admin</td> <td>Use certificate to authenticate the ISE Admin Portal</td> <td>false</td> </tr> <tr> <td>eap</td> <td>Use certificate for EAP protocols that use SSL/TLS tunneling</td> <td>false</td> </tr> <tr> <td>radius</td> <td>Use certificate for RADSec server</td> <td>false</td> </tr> <tr> <td>pxgrid</td> <td>Use certificate for the pxGrid Controller</td> <td>false</td> </tr> <tr> <td>ims</td> <td>Use certificate for the ISE Messaging Service</td> <td>false</td> </tr> <tr> <td>saml</td> <td>Use certificate for SAML Signing</td> <td>false</td> </tr> <tr> <td>portal</td> <td>Use certificate for portal</td> <td>false</td> </tr> <tr> <td>portalGroupTag</td> <td>Portal Group Tag for using certificate with portal role</td> <td>Default Portal Certificate Group</td> </tr> <tr> <td>allowReplacementOfPortalGroupTag</td> <td>Allow Replacement of Portal Group Tag (required)</td> <td>false</td> </tr> <tr> <td>allowWildCardCertificates</td> <td>Allow use of WildCards in certificates</td> <td>false</td> </tr> <tr> <td>validateCertificateExtensions</td> <td>Validate Certificate Extensions</td> <td>false</td> </tr> </tbody> </table> <br/> <h4>Following Roles can be used in any combinations</h4> <table class=\"certTable\"> <thead> <tr> <th>ROLE</th> <th>DEFAULT</th> <th>WARNING</th> </tr> </thead> <tbody> <tr> <td>Admin</td> <td>False</td> <td>Enabling Admin role for this certificate will cause an application server restart on the selected node.<br/><b>Note:</b> Make sure required Certificate Chain is imported under Trusted Certificates</td> </tr> <tr> <td>EAP Authentication</td> <td>False</td> <td>Only one system certificate can be used for EAP. Assigning EAP to this certificate will remove the assignment from another certificate.<br/><b>Note:</b> Make sure required Certificate Chain is imported under Trusted Certificates</td> </tr> <tr> <td>RADIUS DTLS</td> <td>False</td> <td>Only one system certificate can be used for DTLS. Assigning DTLS to this certificate will remove the assignment from another certificate.<br/><b>Note:</b> Make sure required Certificate Chain is imported under Trusted Certificates</td> </tr> <tr> <td>SAML</td> <td>False</td> <td>SAML cannot be used with other Usage. Enabling SAML will uncheck all other Usage.</br><b>Note:</b> Make sure required Certificate Chain is imported under Trusted Certificates</td> </tr> </tbody> </table> <div>","operationId":"importSystemCert","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SystemCert"}}}},"responses":{"200":{"description":"Created Certificate","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ImportSystemCertRespPayload"}}}},"201":{"description":"Created"},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"},"405":{"description":"Invalid Input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"406":{"description":"Not Acceptable","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"409":{"description":"Certificate already exists","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"417":{"description":"Requried parameters missing expectation failed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"422":{"description":"The request was well-formed but was unable to be followed due to semantic errors","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/certs/system-certificate/{hostName}":{"get":{"tags":["Certificates"],"summary":"Purpose of this API is to get all system certificates of a particular node","description":"<p style=\"font-size: 15px;\"> This API supports Filtering, Sorting and Pagination. </p><br/> <p style=\"font-size: 14px;\">Filtering and Sorting supported on below mentioned attributes: </p>    <ul style=\"font-size: 14px;\">        <li>friendlyName</li>        <li>issuedTo</li>        <li>issuedBy</li>        <li>validFrom</li>          <ul>            <li>Supported Date Format: yyyy-MM-dd HH:mm:ss</li>            <li>Supported Operators: EQ, NEQ, GT and LT</li>          </ul>        <li>expirationDate</li>          <ul>            <li>Supported Date Format: yyyy-MM-dd HH:mm:ss</li>            <li>Supported Operators: EQ, NEQ, GT and LT</li>          </ul>      </ul> ","operationId":"getSystemCertificates","parameters":[{"name":"hostName","in":"path","description":"Name of the host of which system certificates should be returned","required":true,"style":"simple","schema":{"type":"string"}},{"name":"page","in":"query","description":"Page number","required":false,"style":"form","schema":{"type":"integer","format":"int32"}},{"name":"size","in":"query","description":"Number of objects returned per page","required":false,"style":"form","schema":{"type":"integer","format":"int32"}},{"name":"sort","in":"query","description":"sort type - asc or desc","required":false,"style":"form","schema":{"type":"string","enum":["asc","desc"]}},{"name":"sortBy","in":"query","description":"sort column by which objects needs to be sorted","required":false,"style":"form","schema":{"type":"string"}},{"name":"filter","in":"query","description":"<div> <style type=\"text/css\" scoped> .apiServiceTable td, .apiServiceTable th { padding: 5px 10px !important; text-align: left; } </style> <span> <b>Simple filtering</b> should be available through the filter query string parameter. The structure of a filter is a triplet of field operator and value separated with dots. More than one filter can be sent. The logical operator common to ALL filter criteria will be by default AND, and can be changed by using the <i>\"filterType=or\"</i> query string parameter. Each resource Data model description should specify if an attribute is a filtered field. </span> <br /> <table class=\"apiServiceTable\"> <thead> <tr> <th>OPERATOR</th> <th>DESCRIPTION</th> </tr> </thead> <tbody> <tr> <td>EQ</td> <td>Equals</td> </tr> <tr> <td>NEQ</td> <td>Not Equals</td> </tr> <tr> <td>GT</td> <td>Greater Than</td> </tr> <tr> <td>LT</td> <td>Less Then</td> </tr> <tr> <td>STARTSW</td> <td>Starts With</td> </tr> <tr> <td>NSTARTSW</td> <td>Not Starts With</td> </tr> <tr> <td>ENDSW</td> <td>Ends With</td> </tr> <tr> <td>NENDSW</td> <td>Not Ends With</td> </tr> <tr> <td>CONTAINS</td> <td>Contains</td> </tr> <tr> <td>NCONTAINS</td> <td>Not Contains</td> </tr> </tbody> </table> </div>","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"filterType","in":"query","description":"The logical operator common to ALL filter criteria will be by default AND, and can be changed by using the parameter","required":false,"style":"form","schema":{"type":"string","enum":["AND","OR"]}}],"responses":{"200":{"description":"Fetched list of all system certificates","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SystemCertGetAllRsp"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"},"405":{"description":"Invalid Input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/certs/system-certificate/{hostName}/{id}":{"get":{"tags":["Certificates"],"summary":"Purpose of this API is to get system certificate of a particular node by Id","description":"This API displays details of a System Certificate of a particular node based on a given HostName and ID.","operationId":"getSystemCertificateById","parameters":[{"name":"hostName","in":"path","description":"Name of the host of which system certificates should be returned","required":true,"style":"simple","schema":{"type":"string"}},{"name":"id","in":"path","description":"The id of the system certificate","required":true,"style":"simple","schema":{"type":"string"}}],"responses":{"200":{"description":"Fetched system certificate of given id","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SystemCertGetByIdRsp"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"},"405":{"description":"Invalid Input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"put":{"tags":["Certificates"],"summary":"Purpose of the API is to update data for existing system certificate.","description":"<div> <style type=\"text/css\" scoped> .certTable td , .certTable th { padding: 5px 10px !important; text-align: left;} </style> <h3>Update a System Certificate.</h3> <span><b>NOTE: </b>Renewing a certificate will cause an application server restart on the selected node. </span><br> <span><b>NOTE: </b>Request Parameters accepting True and False as input can be replaced by 1 and 0 respectively. </span><br> <h4>Following Parameters are used in POST body</h4> <table class=\"certTable\"> <thead> <tr> <th>PARAMETER</th> <th>DESCRIPTION</th> <th>EXAMPLE</th> </tr> </thead> <tbody> <tr> <td>name</td> <td>Friendly name of the certificate.</td> <td>System Certificate</td> </tr> <tr> <td>description <td>Description of the Certificate <td>Default Description </tr> <tr> <td>admin</td> <td>Use certificate to authenticate the ISE Admin Portal</td> <td>false</td> </tr> <tr> <td>eap</td> <td>Use certificate for EAP protocols that use SSL/TLS tunneling</td> <td>false</td> </tr> <tr> <td>radius</td> <td>Use certificate for RADSec server</td> <td>false</td> </tr> <tr> <td>pxgrid</td> <td>Use certificate for the pxGrid Controller</td> <td>false</td> </tr> <tr> <td>ims</td> <td>Use certificate for the ISE Messaging Service</td> <td>false</td> </tr> <tr> <td>saml</td> <td>Use certificate for SAML Signing</td> <td>false</td> </tr> <tr> <td>portal</td> <td>Use certificate for portal</td> <td>false</td> </tr> <tr> <td>portalGroupTag</td> <td>Portal Group Tag for using certificate with portal role</td> <td>Default Portal Certificate Group</td> </tr> <tr> <td>allowReplacementOfPortalGroupTag</td> <td>Allow Replacement of Portal Group Tag (required)</td> <td>false</td> </tr> <tr> <td>renewSelfSignedCertificate</td> <td>Renew Self Signed Certificate</td> <td>false</td> </tr> <tr> <td>expirationTTLPeriod</td> <td>Expiration Period</td> <td>365</td> </tr> <tr> <td>expirationTTLUnits</td> <td>Expiration Units in one of the below formats <ul> <li><b>days / weeks / months / years</li> </ul> </td> <td>days</td> </tr> </tbody> </table> <br/> <h4>Following Roles can be used in any combinations</h4> <table class=\"certTable\"> <thead> <tr> <th>ROLE</th> <th>DEFAULT</th> <th>WARNING</th> </tr> </thead> <tbody> <tr> <td>Admin</td> <td>False</td> <td>Enabling Admin role for this certificate will cause an application server restart on the selected node.<br/><b>Note:</b> Make sure required Certificate Chain is imported under Trusted Certificates</td> </tr> <tr> <td>EAP Authentication</td> <td>False</td> <td>Only one system certificate can be used for EAP. Assigning EAP to this certificate will remove the assignment from another certificate.<br/><b>Note:</b> Make sure required Certificate Chain is imported under Trusted Certificates</td> </tr> <tr> <td>RADIUS DTLS</td> <td>False</td> <td>Only one system certificate can be used for DTLS. Assigning DTLS to this certificate will remove the assignment from another certificate.<br/><b>Note:</b> Make sure required Certificate Chain is imported under Trusted Certificates</td> </tr> <tr> <td>SAML</td> <td>False</td> <td>SAML cannot be used with other Usage. Enabling SAML will uncheck all other Usage.</br><b>Note:</b> Make sure required Certificate Chain is imported under Trusted Certificates</td> </tr> </tbody> </table> <div>","operationId":"updateSystemCert","parameters":[{"name":"id","in":"path","description":"The ID of the System Certificate to be updated","required":true,"style":"simple","schema":{"type":"string"}},{"name":"hostName","in":"path","description":"Name of Host whose certificate needs to be updated","required":true,"style":"simple","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateSystemCertRequest"}}}},"responses":{"200":{"description":"Created Certificate","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateSystemCertRespPayload"}}}},"201":{"description":"Created"},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"},"405":{"description":"Invalid Input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"406":{"description":"Not Acceptable","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"409":{"description":"Certificate already exists","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"417":{"description":"Requried parameters missing expectation failed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"422":{"description":"The request was well-formed but was unable to be followed due to semantic errors","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"delete":{"tags":["Certificates"],"summary":"Purpose of the API is to delete System Certificate by ID and hostname","description":"This API deletes a System Certificate of a particular node based on a given HostName and ID.","operationId":"deleteSystemCertificateById","parameters":[{"name":"hostName","in":"path","description":"Name of the host from which the System Certificate needs to be deleted","required":true,"style":"simple","schema":{"type":"string"}},{"name":"id","in":"path","description":"The ID of the System Certificate to be deleted","required":true,"style":"simple","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteSystemCertRequest"}}}},"responses":{"200":{"description":"Deleted the System Certificate of given id.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteSystemCertRespPayload"}}}},"204":{"description":"No Content"},"400":{"description":"Given hostname or certificate id not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteSystemCertRespPayload"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}},"security":[{"BasicAuth":[]}]}},"/api/v1/certs/trusted-certificate":{"get":{"tags":["Certificates"],"summary":"Purpose of this API is to get list of all trusted certificates","description":"<p style=\"font-size: 15px;\"> This API supports Filtering, Sorting and Pagination. </p><br/> <p style=\"font-size: 14px;\">Filtering and Sorting supported on below mentioned attributes: </p>    <ul style=\"font-size: 14px;\">        <li>friendlyName</li>        <li>subject</li>        <li>issuedTo</li>        <li>issuedBy</li>        <li>validFrom</li>         <ul>          <li>Supported Date Format: yyyy-MM-dd HH:mm:ss</li>          <li>Supported Operators: EQ, NEQ, GT and LT</li>         </ul>        <li>expirationDate</li>         <ul>          <li>Supported Date Format: yyyy-MM-dd HH:mm:ss</li>          <li>Supported Operators: EQ, NEQ, GT and LT</li>         </ul>        <li>status</li>         <ul>          <li>Allowed values: enabled, disabled</li>          <li>Supported Operators: EQ, NEQ</li>         </ul>      </ul> ","operationId":"getTrustedCertificates","parameters":[{"name":"page","in":"query","description":"Page number","required":false,"style":"form","schema":{"type":"integer","format":"int32"}},{"name":"size","in":"query","description":"Number of objects returned per page","required":false,"style":"form","schema":{"type":"integer","format":"int32"}},{"name":"sort","in":"query","description":"sort type - asc or desc","required":false,"style":"form","schema":{"type":"string","enum":["asc","desc"]}},{"name":"sortBy","in":"query","description":"sort column by which objects needs to be sorted","required":false,"style":"form","schema":{"type":"string"}},{"name":"filter","in":"query","description":"<div> <style type=\"text/css\" scoped> .apiServiceTable td, .apiServiceTable th { padding: 5px 10px !important; text-align: left; } </style> <span> <b>Simple filtering</b> should be available through the filter query string parameter. The structure of a filter is a triplet of field operator and value separated with dots. More than one filter can be sent. The logical operator common to ALL filter criteria will be by default AND, and can be changed by using the <i>\"filterType=or\"</i> query string parameter. Each resource Data model description should specify if an attribute is a filtered field. </span> <br /> <table class=\"apiServiceTable\"> <thead> <tr> <th>OPERATOR</th> <th>DESCRIPTION</th> </tr> </thead> <tbody> <tr> <td>EQ</td> <td>Equals</td> </tr> <tr> <td>NEQ</td> <td>Not Equals</td> </tr> <tr> <td>GT</td> <td>Greater Than</td> </tr> <tr> <td>LT</td> <td>Less Then</td> </tr> <tr> <td>STARTSW</td> <td>Starts With</td> </tr> <tr> <td>NSTARTSW</td> <td>Not Starts With</td> </tr> <tr> <td>ENDSW</td> <td>Ends With</td> </tr> <tr> <td>NENDSW</td> <td>Not Ends With</td> </tr> <tr> <td>CONTAINS</td> <td>Contains</td> </tr> <tr> <td>NCONTAINS</td> <td>Not Contains</td> </tr> </tbody> </table> </div>","required":false,"style":"form","explode":true,"schema":{"type":"string"}},{"name":"filterType","in":"query","description":"The logical operator common to ALL filter criteria will be by default AND, and can be changed by using the parameter","required":false,"style":"form","schema":{"type":"string","enum":["AND","OR"]}}],"responses":{"200":{"description":"Fetched list of all trusted certificates","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TrustCertGetAllRsp"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"BasicAuth":[]}]}},"/api/v1/certs/trusted-certificate/export/{id}":{"get":{"tags":["Certificates"],"summary":"Purpose of the API is to export a trust certificate given a certificate id.","description":"<h3>The response of this API carries a trusted certificate file mapped to the requested id</h3>","operationId":"exportTrustedCert","parameters":[{"name":"id","in":"path","description":"The ID of the Trusted Certificate to be exported.","required":true,"style":"simple","schema":{"type":"string"}}],"responses":{"200":{"description":"Exported Trusted Certificate successfully","content":{"application/octet-stream":{"schema":{"$ref":"#/components/schemas/Resource"}},"application/json":{"schema":{"$ref":"#/components/schemas/Resource"}}}},"400":{"description":"Bad Request","content":{"application/octet-stream":{"schema":{"$ref":"#/components/schemas/Error"}},"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"BasicAuth":[]}]}},"/api/v1/certs/trusted-certificate/import":{"post":{"tags":["Certificates"],"summary":"Purpose of the API is to add root certificate to the ISE truststore.","description":"<div> <style type=\"text/css\" scoped> .certTable td , .certTable th { padding: 5px 10px !important; text-align: left;} </style> <h3>Import an X509 certificate as a trust certificate.</h3><br> <span><b>NOTE: </b>Request Parameters accepting True and False as input can be replaced by 1 and 0 respectively. </span><br> <span>Following Parameters are used in POST body</span> <table class=\"certTable\"> <thead> <tr> <th>PARAMETER</th> <th>DESCRIPTION</th> <th>EXAMPLE</th> </tr> </thead> <tbody> <tr> <td>name</td> <td>Friendly name of the certificate</td> <td>Trust Certificate</td> </tr> <tr> <td>description</td> <td>Description of the certificate</td> <td>Passw***</td> </tr> <tr> <td>data</td> <td>Plain-text contents of the certificate file (required)</td> <td>Trust Certificate in escaped format</td> </tr> <tr> <td>allowOutOfDateCert</td> <td>Allow out of date certificates (required)</td> <td>false</td> </tr> <tr> <td>allowSHA1Certificates</td> <td>Allow SHA1 based certificates (required)</td> <td>false</td> </tr> <tr> <td>trustForIseAuth</td> <td>Trust for authentication within ISE</td> <td>false</td> </tr> <tr> <td>trustForClientAuth</td> <td>Trust for client authentication and Syslog</td> <td>false</td> </tr> <tr> <td>trustForCertificateBasedAdminAuth</td> <td>Trust for Certificate based Admin authentication</td> <td>false</td> </tr> <tr> <td>trustForCiscoServicesAuth</td> <td>Trust for authentication of Cisco Services</td> <td>false</td> </tr> <tr> <td>validateCertificateExtensions</td> <td>Validate extensions for trust certificate</td> <td>false</td> </tr> </tbody> </table></br> <span><b>NOTE: </b>If name is not set, a default name of the following format will be generated: </br> <i>- common-name#issuer#nnnnn</i></br> <p>    where <i>\"nnnnn\"</i> is a unique number. You can always change the friendly name later by editing the certificate.</p></span> <hr/> <p>    You must choose how this certificate will be trusted in ISE. The objective here is to distinguish between certificates that are used for trust within an ISE deployment and public certificates that are used to trust Cisco services. Typically, you will not want to use a given certificate for both purposes.</p> <table class=\"certTable\"> <thead> <tr> <th>Trusted For</th> <th>Usage</th> </tr> </thead> <tbody> <tr> <td>Authentication within ISE</td> <td>Use <i>\"trustForIseAuth\":true</i> if the certificate is used for trust within ISE, such as for secure communication between ISE nodes</td> </tr> <tr> <td>Client authentication and Syslog</td> <td>Use <i>\"trustForClientAuth\":true</i> if the certificate is to be used for authentication of endpoints that contact ISE over the EAP protocol. Also check this box if certificate is used to trust a Syslog server. Make sure to have keyCertSign bit asserted under KeyUsage extension for this certificate.</br> <b>Note:</b> \"\" can be set true only if the \"trustForIseAuth\" has been set true.</td> </tr> <tr> <td>Certificate based admin authentication</td> <td>Use <i>\"trustForCertificateBasedAdminAuth\":true</i> if the certificate is used for trust within ISE, such as for secure communication between ISE nodes</br> <b>Note:</b> \"trustForCertificateBasedAdminAuth\" can be set true only if \"trustForIseAuth\" and \"trustForClientAuth\" are true.</td></td> </tr> <tr> <td>Authentication of Cisco Services</td> <td> Use <i>\"trustForCiscoServicesAuth\":true</i> if the certificate is to be used for trusting external Cisco services, such as Feed Service.</td> </tr> </tbody> </table> <div>","operationId":"importTrustCert","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TrustCert"}}}},"responses":{"200":{"description":"Imported Trust Certificate Successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ImportTrustCertRespPayload"}}}},"201":{"description":"Created"},"400":{"description":"Bad request.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"},"405":{"description":"Invalid Input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"409":{"description":"Certificate already exists","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"417":{"description":"Requried parameters missing expectation failed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"422":{"description":"The request was well-formed but was unable to be followed due to semantic errors","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/certs/trusted-certificate/{id}":{"get":{"tags":["Certificates"],"summary":"Purpose of this API is to get Trust Certificate By Id","description":"This API can displays details of a Trust Certificate based on a given ID.","operationId":"getTrustedCertificateById","parameters":[{"name":"id","in":"path","description":"The id of the trust certificate","required":true,"style":"simple","schema":{"type":"string"}}],"responses":{"200":{"description":"Fetched trust certificate of given id","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TrustCertGetByIdRsp"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"BasicAuth":[]}]},"put":{"tags":["Certificates"],"summary":"Purpose of the API is to update trust certificate already present in ISE trust store.","description":"<div> <style type=\"text/css\" scoped> .certTable td , .certTable th { padding: 5px 10px !important; text-align: left;} </style> <h3>Update a trusted certificate present in ISE trust store.</h3> <span>Following Parameters are used in PUT request body</span> <table class=\"certTable\"> <thead> <tr> <th>PARAMETER</th> <th>DESCRIPTION</th> <th>EXAMPLE</th> </tr> </thead> <tbody> <tr> <td>name</td> <td>Friendly name of the certificate(required)</td> <td>Trust Certificate</td> </tr> <tr> <td>status</td> <td>Status of the certificate</td> <td>Enabled</td> </tr> <tr> <td>description</td> <td>Description of the certificate</td> <td>Certificate for secure connection to cisco.com</td> </tr> <tr> <td>trustForIseAuth</td> <td>Trust for authentication within ISE</td> <td>false</td> </tr> <tr> <td>trustForClientAuth</td> <td>Trust for client authentication and Syslog</td> <td>false</td> </tr> <tr> <td>trustForCertificateBasedAdminAuth</td> <td>Trust for Certificate based Admin authentication</td> <td>false</td> </tr> <tr> <td>trustForCiscoServicesAuth</td> <td>Trust for authentication of Cisco Services</td> <td>false</td> </tr> <tr> <td>enableOCSPValidation</td> <td>Switch to enable/disable OCSP Validation</td> <td>false</td> </tr> <tr> <td>selectedOCSPService</td> <td>Name of selected OCSP Service</td> <td>INTERNAL_OCSP_SERVICE</td> </tr> <tr> <td>rejectIfNoStatusFromOCSP</td> <td>Switch to reject certificate if there is no status from OCSP</td> <td>false</td> </tr> <tr> <td>rejectIfUnreachableFromOCSP</td> <td>Switch to reject certificate if unreachable from OCSP</td> <td>false</td> </tr> <tr> <td>downloadCRL</td> <td>Switch to enable/disable download of CRL</td> <td>false</td> </tr> <tr> <td>crlDistributionUrl</td> <td>Certificate Revocation List Distribution URL</td> <td></td> </tr> <tr> <td>automaticCRLUpdate</td> <td>Switch to enable/disable automatic CRL update</td> <td>false</td> </tr> <tr> <td>automaticCRLUpdatePeriod</td> <td>Automatic CRL update period</td> <td>5</td> </tr> <tr> <td>automaticCRLUpdateUnits</td> <td>Unit of time for automatic CRL update</td> <td>Minutes</td> </tr> <tr> <td>nonAutomaticCRLUpdatePeriod</td> <td>Non automatic CRL update period</td> <td>1</td> </tr> <tr> <td>nonAutomaticCRLUpdateUnits</td> <td>Unit of time of non automatic CRL update</td> <td>Hours</td> </tr> <tr> <td>crlDownloadFailureRetries</td> <td>If CRL download fails, wait time before retry</td> <td>10</td> </tr> <tr> <td>crlDownloadFailureRetriesUnits</td> <td>Unit of time before retry if CRL download fails</td> <td>Minutes</td> </tr> <tr> <td>enableServerIdentityCheck</td> <td>Switch to enable/disable verification if HTTPS or LDAP server certificate name fits the configured server URL</td> <td>false</td> </tr> <tr> <td>authenticateBeforeCRLReceived</td> <td>Switch to enable/disable CRL Verification if CRL is not Received</td> <td>false</td> </tr> <tr> <td>ignoreCRLExpiration</td> <td>Switch to enable/disable ignore CRL Expiration</td> <td>false</td> </tr> </tbody> </table></br> <hr/> <table class=\"certTable\"> <thead> <tr> <th>Trusted For</th> <th>Usage</th> </tr> </thead> <tbody> <tr> <td>Authentication within ISE</td> <td>Use <i>\"trustForIseAuth\":true</i> if the certificate is used for trust within ISE, such as for secure communication between ISE nodes</td> </tr> <tr> <td>Client authentication and Syslog</td> <td>Use <i>\"trustForClientAuth\":true</i> if the certificate is to be used for authentication of endpoints that contact ISE over the EAP protocol. Also check this box if certificate is used to trust a Syslog server. Make sure to have keyCertSign bit asserted under KeyUsage extension for this certificate.</br> <b>Note:</b> \"trustForClientAuth\" can be set true only if the \"trustForIseAuth\" has been set true.</td> </tr> <tr> <td>Certificate based admin authentication</td> <td>Use <i>\"trustForCertificateBasedAdminAuth\":true</i> if the certificate is used for trust within ISE, such as for secure communication between ISE nodes</br> <b>Note:</b> \"trustForCertificateBasedAdminAuth\" can be set true only if \"trustForIseAuth\" and \"trustForClientAuth\" are true.</td></td> </tr> <tr> <td>Authentication of Cisco Services</td> <td> Use <i>\"trustForCiscoServicesAuth\":true</i> if the certificate is to be used for trusting external Cisco services, such as Feed Service.</td> </tr> </tbody> </table> <table class=\"certTable\"> <thead> <tr> <th>OCSP Configuration</th> <th>Usage</th> </tr> </thead> <tbody> <tr> <td>Validation against OCSP service</td> <td>Use <i>\"enableOCSPValidation\":true</i> to validate the certificate against OCSP service mentioned in the field <i>selectedOCSPService</i></td> </tr> <tr> <td>OCSP Service name</td> <td>Use <i>\"selectedOCSPService\":\"Name of OCSP Service\"</i> Name of the OCSP service against which the certificate should be validated</br> <b>Note:</b> \"selectedOCSPService\" value will on be used if \"enableOCSPValidation\" has been set true.</td> </tr> <tr> <td>Reject the request if OCSP returns UNKNOWN status</td> <td>Use <i>\"rejectIfNoStatusFromOCSP\":true</i> to reject the certificate if the OCSP service returns UNKNOWN status</br> <b>Note:</b> \"rejectIfNoStatusFromOCSP:true\" can be used only if \"enableOCSPValidation\" has been set true.</td> </tr> <tr> <td>Reject the request if OCSP Responder is unreachable</td> <td> Use <i>\"rejectIfUnreachableFromOCSP\":true</i> to reject the certificate if the OCSP service is unreachable.</br> <b>Note:</b> \"rejectIfUnreachableFromOCSP:true\" can be used only if \"enableOCSPValidation\" has been set true.</td> </tr> </tbody> </table> <table class=\"certTable\"> <thead> <tr> <th>Certificate Revocation List Configuration</th> <th>Usage</th> </tr> </thead> <tbody> <tr> <td>Validation against CRL</td> <td>Use <i>\"downloadCRL\":true</i> to validate the certificate against CRL downloaded from URL mentioned in the field <i>crlDistributionUrl</i></td> </tr> <tr> <td>CRL distribution url</td> <td>Use <i>\"crlDistributionUrl\"</i> to specify the URL from where the CRL should be downloaded</br> <b>Note:</b> \"crlDistributionUrl\" value will only be used if \"downloadCRL\" has been set true.</td> </tr> <tr> <td>Retrieve CRL time</td> <td>Use <i>\"automaticCRLUpdate\":true and automaticCRLUpdatePeriod, automaticCRLUpdatePeriod</i> to set the time before which CRL is automatically retrieved prior to expiration</br> Use <i>\"nonAutomaticCRLUpdatePeriod, nonAutomaticCRLUpdateUnits</i> to set the time period for CRL retrieval in loop.<br> <b>Note:</b> All the above fields can be used only if \"downloadCRL\" has been set true.</td> </tr> <tr> <td>If download fails</td> <td>Use <i>\"crlDownloadFailureRetries\" and \"crlDownloadFailureRetriesUnits\"</i> to set retry time period if CRL download fails</br> <b>Note:</b> \"crlDownloadFailureRetries\" and \"crlDownloadFailureRetriesUnits\" can be used only if \"downloadCRL\" has been set true.</td> </tr> <tr> <td>Enable Server Identity Check</td> <td>Use <i>\"enableServerIdentityCheck\":true</i> to verify that HTTPS or LDAPS server certificate name fits the configured server URL</br> <b>Note:</b> \"enableServerIdentityCheck:true\" can be used only if \"downloadCRL\" has been set true.</td> </tr> <tr> <td>Bypass CRL Verification if CRL is not Received</td> <td>Use <i>\"authenticateBeforeCRLReceived\":true</i> to bypass CRL Verification if CRL is not Received</br> <b>Note:</b> \"authenticateBeforeCRLReceived:true\" can be used only if \"downloadCRL\" has been set true.</td> </tr> <tr> <td>Ignore that CRL is not yet valid or has expired</td> <td> Use <i>\"ignoreCRLExpiration\":true</i> to ignore if CRL is not yet valid or expired</br> <b>Note:</b> \"ignoreCRLExpiration:true\" can be used only if \"downloadCRL\" has been set true.</td> </tr> </tbody> </table> <br> <span><b>Note: </b>boolean properties accept integers values as well, with 0 considered as false and other values being considered as true </span> <div>","operationId":"updateTrustedCertificate","parameters":[{"name":"id","in":"path","description":"The id of the trust certificate","required":true,"style":"simple","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateTrustCertRequest"}}}},"responses":{"200":{"description":"Update Trust Certificate Successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateTrustCertRespPayload"}}}},"201":{"description":"Created"},"400":{"description":"Bad request.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateTrustCertRespPayload"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"},"422":{"description":"Unprocessable entity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateTrustCertRespPayload"}}}}},"security":[{"BasicAuth":[]}]},"delete":{"tags":["Certificates"],"summary":"Purpose of the API is to delete Trusted Certificate by ID","description":"This API deletes a Trust Certificate from Trusted Certificate Store based on a given ID.","operationId":"deleteTrustedCertificateById","parameters":[{"name":"id","in":"path","description":"The ID of the Trusted Certificate to be deleted","required":true,"style":"simple","schema":{"type":"string"}}],"responses":{"200":{"description":"Deleted the Trusted Certificate of the given id.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteTrustedCertRespPayload"}}}},"204":{"description":"No Content"},"400":{"description":"Bad request while deleting the trusted cert.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Trusted Certificate with given id is not found.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}}},"components":{"schemas":{"BindCSRRequest":{"title":"BindCSRRequest","required":["allowExtendedValidity","allowOutOfDateCert","allowReplacementOfCertificates","allowReplacementOfPortalGroupTag","data","hostName","id"],"type":"object","properties":{"admin":{"type":"boolean","description":" Use certificate to authenticate the ISE Admin Portal","example":false},"allowExtendedValidity":{"type":"boolean","description":"Allow import of certificates with validity greater than 398 days","example":false},"allowOutOfDateCert":{"type":"boolean","description":"Allow out of date certificates (required)","example":false},"allowReplacementOfCertificates":{"type":"boolean","description":"Allow Replacement of certificates (required)","example":false},"allowReplacementOfPortalGroupTag":{"type":"boolean","description":"Allow Replacement of Portal Group Tag (required)","example":false},"data":{"type":"string","description":"Signed Certificate in escaped format","example":"Signed Certificate in escaped format"},"eap":{"type":"boolean","description":"Use certificate for EAP protocols that use SSL/TLS tunneling","example":false},"hostName":{"type":"string","description":"Name of Host whose CSR ID has been provided","example":"Host Name"},"id":{"type":"string","description":"ID of the generated CSR","example":"CSR ID"},"ims":{"type":"boolean","description":"Use certificate for the ISE Messaging Service","example":false},"name":{"type":"string","description":"Friendly Name of the certificate","example":"CA Signed Certificate"},"portal":{"type":"boolean","description":"Use for portal","example":false},"portalGroupTag":{"type":"string","description":"Set Group tag","example":"Default Portal Certificate Group"},"pxgrid":{"type":"boolean","description":"Use certificate for the pxGrid Controller","example":false},"radius":{"type":"boolean","description":"Use certificate for the RADSec server","example":false},"saml":{"type":"boolean","description":"Use certificate for SAML Signing","example":false},"validateCertificateExtensions":{"type":"boolean","description":"Validate Certificate Extensions","example":false}}},"BindCSRRespPayload":{"title":"BindCSRRespPayload","type":"object","properties":{"response":{"$ref":"#/components/schemas/BindCSRResponse"},"version":{"type":"string"}}},"BindCSRResponse":{"title":"BindCSRResponse","type":"object","properties":{"message":{"type":"string"},"status":{"type":"string","description":"Response status after import"}}},"CSRByIdResponse":{"title":"CSRByIdResponse","type":"object","properties":{"csrContents":{"type":"string","description":"Contents of the certificate file."},"friendlyName":{"type":"string","description":"Friendly name of the certificate."},"groupTag":{"type":"string","description":"GroupTag of the certificate."},"hostName":{"type":"string","description":"Hostname or IP address of the ISE node."},"id":{"type":"string","description":"ID of the certificate."},"keySize":{"type":"string","description":"Size of the cryptographic key used."},"link":{"$ref":"#/components/schemas/Link"},"signatureAlgorithm":{"type":"string","description":"Algorithm used for encrypting CSR"},"subject":{"type":"string","description":"Subject of the certificate. Includes Common Name (CN), Organizational Unit (OU), etc."},"timeStamp":{"type":"string","description":"Timestamp of the certificate generation."},"usedFor":{"type":"string","description":"Services for which the certificate is used for(for eg- MGMT, GENERIC)."}}},"CSRGetAllRsp":{"title":"CSRGetAllRsp","type":"object","properties":{"nextPage":{"$ref":"#/components/schemas/Link"},"previousPage":{"$ref":"#/components/schemas/Link"},"response":{"type":"array","items":{"$ref":"#/components/schemas/CSRResponse"}},"version":{"type":"string"}}},"CSRGetByIdRsp":{"title":"CSRGetByIdRsp","type":"object","properties":{"response":{"$ref":"#/components/schemas/CSRByIdResponse"},"version":{"type":"string"}}},"CSRRequest":{"title":"CSRRequest","required":["digestType","keyLength","keyType","usedFor"],"type":"object","properties":{"allowWildCardCert":{"type":"boolean","example":false},"certificatePolicies":{"type":"string"},"digestType":{"type":"string","enum":["SHA-256","SHA-384","SHA-512"]},"hostnames":{"type":"array","items":{"type":"string"}},"keyLength":{"type":"string","enum":["1024","2048","4096","512"]},"keyType":{"type":"string","enum":["ECDSA","RSA"]},"portalGroupTag":{"type":"string"},"sanDNS":{"type":"array","items":{"type":"string"}},"sanDir":{"type":"array","items":{"type":"string"}},"sanIP":{"type":"array","items":{"type":"string"}},"sanURI":{"type":"array","items":{"type":"string"}},"subjectCity":{"type":"string"},"subjectCommonName":{"type":"string","example":"$FQDN$"},"subjectCountry":{"type":"string"},"subjectOrg":{"type":"string"},"subjectOrgUnit":{"type":"string"},"subjectState":{"type":"string"},"usedFor":{"type":"string","enum":["ADMIN","DTLS-AUTH","EAP-AUTH","IMS","MULTI-USE","PORTAL","PXGRID","SAML"]}}},"CSRResponse":{"title":"CSRResponse","type":"object","properties":{"friendlyName":{"type":"string","description":"Friendly name of the certificate."},"groupTag":{"type":"string","description":"GroupTag of the certificate."},"hostName":{"type":"string","description":"Hostname or IP address of the ISE node."},"id":{"type":"string","description":"ID of the certificate."},"keySize":{"type":"string","description":"Size of the cryptographic key used."},"link":{"$ref":"#/components/schemas/Link"},"signatureAlgorithm":{"type":"string","description":"Algorithm used for encrypting CSR"},"subject":{"type":"string","description":"Subject of the certificate. Includes Common Name (CN), Organizational Unit (OU), etc."},"timeStamp":{"type":"string","description":"Timestamp of the certificate generation."},"usedFor":{"type":"string","description":"Services for which the certificate is used for(for eg- MGMT, GENERIC)."}}},"DeleteCSRRespPayload":{"title":"DeleteCSRRespPayload","type":"object","properties":{"response":{"$ref":"#/components/schemas/DeleteCSRResponse"},"version":{"type":"string"}}},"DeleteCSRResponse":{"title":"DeleteCSRResponse","type":"object","properties":{"message":{"type":"string"}}},"DeleteSystemCertRequest":{"title":"DeleteSystemCertRequest","type":"object","properties":{"allowWildcardDelete":{"type":"boolean","description":"If the given certificate to be deleted is a wildcard certificate, corresponding certificate will be deleted on rest of the nodes in the deployment as well.","example":false}}},"DeleteSystemCertRespPayload":{"title":"DeleteSystemCertRespPayload","type":"object","properties":{"response":{"$ref":"#/components/schemas/DeleteSystemCertResponse"},"version":{"type":"string"}}},"DeleteSystemCertResponse":{"title":"DeleteSystemCertResponse","type":"object","properties":{"message":{"type":"string"}}},"DeleteTrustedCertRespPayload":{"title":"DeleteTrustedCertRespPayload","type":"object","properties":{"response":{"$ref":"#/components/schemas/DeleteTrustedCertResponse"},"version":{"type":"string"}}},"DeleteTrustedCertResponse":{"title":"DeleteTrustedCertResponse","type":"object","properties":{"message":{"type":"string"}}},"Error":{"title":"Error","required":["message","status"],"type":"object","properties":{"message":{"type":"string"},"status":{"type":"string"}}},"ExportCSRFailRespPayload":{"title":"ExportCSRFailRespPayload","type":"object","properties":{"response":{"$ref":"#/components/schemas/ExportCSRFailResponse"},"version":{"type":"string"}}},"ExportCSRFailResponse":{"title":"ExportCSRFailResponse","type":"object","properties":{"message":{"type":"string","description":"Response message on failure of export CSR"}}},"ExportCertRequest":{"title":"ExportCertRequest","required":["export","id"],"type":"object","properties":{"export":{"type":"string","enum":["CERTIFICATE","CERTIFICATE_WITH_PRIVATE_KEY"]},"id":{"type":"string","example":"CERT-ID"},"password":{"type":"string","example":"password"}}},"GenerateCSRRespPayload":{"title":"GenerateCSRRespPayload","type":"object","properties":{"response":{"type":"array","items":{"$ref":"#/components/schemas/GenerateCSRResponse"}},"version":{"type":"string"}}},"GenerateCSRResponse":{"title":"GenerateCSRResponse","type":"object","properties":{"id":{"type":"string","description":"ID of the generated CSR"},"link":{"$ref":"#/components/schemas/Link"},"message":{"type":"string","description":"Response message on generation of CSR"}}},"GenerateIntermediateCACsrRespPayload":{"title":"GenerateIntermediateCACsrRespPayload","type":"object","properties":{"response":{"$ref":"#/components/schemas/GenerateCSRResponse"},"version":{"type":"string"}}},"ImportCertResponse":{"title":"ImportCertResponse","type":"object","properties":{"id":{"type":"string","description":"ID of the imported trust certificate"},"message":{"type":"string","description":"Response message on import of system or trust certificate"},"status":{"type":"string","description":"HTTP response status after import"}}},"ImportSystemCertRespPayload":{"title":"ImportSystemCertRespPayload","type":"object","properties":{"response":{"$ref":"#/components/schemas/ImportCertResponse"},"version":{"type":"string"}}},"ImportTrustCertRespPayload":{"title":"ImportTrustCertRespPayload","type":"object","properties":{"response":{"$ref":"#/components/schemas/ImportCertResponse"},"version":{"type":"string"}}},"InputStream":{"title":"InputStream","type":"object"},"Link":{"title":"Link","type":"object","properties":{"href":{"type":"string"},"rel":{"type":"string","enum":["next","previous","self","status"]},"type":{"type":"string"}}},"RegenerateRootCA":{"title":"RegenerateRootCA","required":["removeExistingISEIntermediateCSR"],"type":"object","properties":{"removeExistingISEIntermediateCSR":{"type":"boolean","description":"Setting this attribute to true will remove existing ISE Intermediate CSR","example":false}}},"RegenerateRootCaRespPayload":{"title":"RegenerateRootCaRespPayload","type":"object","properties":{"response":{"$ref":"#/components/schemas/RegenerateRootCaResponse"},"version":{"type":"string"}}},"RegenerateRootCaResponse":{"title":"RegenerateRootCaResponse","type":"object","properties":{"id":{"type":"string","description":"Id which can be used to track status of ISE root CA chain regeneration"},"link":{"$ref":"#/components/schemas/Link"},"message":{"type":"string"}}},"RenewCertRespPayload":{"title":"RenewCertRespPayload","type":"object","properties":{"response":{"$ref":"#/components/schemas/RenewCertResponse"},"version":{"type":"string"}}},"RenewCertResponse":{"title":"RenewCertResponse","type":"object","properties":{"id":{"type":"string","description":"Id which can be used to track status of certificate regeneration"},"link":{"$ref":"#/components/schemas/Link"},"message":{"type":"string"}}},"RenewCertificates":{"title":"RenewCertificates","required":["certType"],"type":"object","properties":{"certType":{"type":"string","enum":["IMS","OCSP"]}}},"Resource":{"title":"Resource","type":"object","properties":{"description":{"type":"string"},"file":{"type":"string","format":"binary"},"filename":{"type":"string"},"inputStream":{"$ref":"#/components/schemas/InputStream"},"open":{"type":"boolean"},"readable":{"type":"boolean"},"uri":{"type":"string","format":"uri"},"url":{"type":"string","format":"url"}}},"SystemCert":{"title":"SystemCert","required":["allowExtendedValidity","allowOutOfDateCert","allowReplacementOfCertificates","allowReplacementOfPortalGroupTag","allowSHA1Certificates","data","privateKeyData"],"type":"object","properties":{"admin":{"type":"boolean","description":"Use certificate to authenticate the ISE Admin Portal","example":false},"allowExtendedValidity":{"type":"boolean","description":"Allow import of certificates with validity greater than 398 days","example":false},"allowOutOfDateCert":{"type":"boolean","description":"Allow out of date certificates (required)","example":false},"allowReplacementOfCertificates":{"type":"boolean","description":"Allow Replacement of certificates (required)","example":false},"allowReplacementOfPortalGroupTag":{"type":"boolean","description":"Allow Replacement of Portal Group Tag (required)","example":false},"allowSHA1Certificates":{"type":"boolean","description":"Allow SHA1 based certificates (required)","example":false},"allowWildCardCertificates":{"type":"boolean","description":"Allow Wildcard Certificates","example":false},"data":{"type":"string","description":"Certificate Content (required)","example":"System Certificate in escaped format"},"eap":{"type":"boolean","description":"Use certificate for EAP protocols that use SSL/TLS tunneling","example":false},"ims":{"type":"boolean","description":"Use certificate for the ISE Messaging Service","example":false},"name":{"type":"string","description":"Name of the certificate","example":"System Certificate"},"password":{"type":"string","description":"Certificate Password (required).","example":"Certificate Password"},"portal":{"type":"boolean","description":"Use for portal","example":false},"portalGroupTag":{"type":"string","description":"Set Group tag","example":"Default Portal Certificate Group"},"privateKeyData":{"type":"string","description":"Private Key data (required)","example":"System Certificate Private Key in escaped format"},"pxgrid":{"type":"boolean","description":"Use certificate for the pxGrid Controller","example":false},"radius":{"type":"boolean","description":"Use certificate for the RADSec server","example":false},"saml":{"type":"boolean","description":"Use certificate for SAML Signing","example":false},"validateCertificateExtensions":{"type":"boolean","description":"Validate Certificate Extensions","example":false}}},"SystemCertGetAllRsp":{"title":"SystemCertGetAllRsp","type":"object","properties":{"nextPage":{"$ref":"#/components/schemas/Link"},"previousPage":{"$ref":"#/components/schemas/Link"},"response":{"type":"array","items":{"$ref":"#/components/schemas/SystemCertificateResponse"}},"version":{"type":"string"}}},"SystemCertGetByIdRsp":{"title":"SystemCertGetByIdRsp","type":"object","properties":{"response":{"$ref":"#/components/schemas/SystemCertificateResponse"},"version":{"type":"string"}}},"SystemCertificateResponse":{"title":"SystemCertificateResponse","type":"object","properties":{"expirationDate":{"type":"string","description":"The time and date past which the certificate is no longer valid"},"friendlyName":{"type":"string","description":"Friendly name of system certificate"},"groupTag":{"type":"string"},"id":{"type":"string","description":"ID of system certificate"},"issuedBy":{"type":"string","description":"Common Name of the certificate issuer"},"issuedTo":{"type":"string","description":"Common Name of the certificate subject"},"keySize":{"type":"integer","description":"The length of key used for encrypting system certificate","format":"int32"},"link":{"$ref":"#/components/schemas/Link"},"portalsUsingTheTag":{"type":"string"},"selfSigned":{"type":"boolean","example":false},"serialNumberDecimalFormat":{"type":"string","description":"Used to uniquely identify the certificate within a CA's systems"},"sha256Fingerprint":{"type":"string"},"signatureAlgorithm":{"type":"string"},"usedBy":{"type":"string"},"validFrom":{"type":"string","description":"The time and date on which the certificate was created, also known as the Not Before certificate attribute"}}},"TrustCert":{"title":"TrustCert","required":["allowBasicConstraintCAFalse","allowOutOfDateCert","allowSHA1Certificates","data"],"type":"object","properties":{"allowBasicConstraintCAFalse":{"type":"boolean","description":"Allow Certificates with Basic Constraints CA Field as False (required)","example":false},"allowOutOfDateCert":{"type":"boolean","description":"Allow out of date certificates (required)","example":false},"allowSHA1Certificates":{"type":"boolean","description":"Allow SHA1 based certificates (required)","example":false},"data":{"type":"string","description":"Certificate content (required)","example":"Trust Certificate in escaped format"},"description":{"type":"string","description":"Description of the certificate","example":"Imported Trust Certificate"},"name":{"type":"string","description":"Name of the certificate","example":"Trust Certificate"},"trustForCertificateBasedAdminAuth":{"type":"boolean","description":"Trust for Certificate based Admin authentication","example":false},"trustForCiscoServicesAuth":{"type":"boolean","description":"Trust for authentication of Cisco Services","example":false},"trustForClientAuth":{"type":"boolean","description":"Trust for client authentication and Syslog","example":false},"trustForIseAuth":{"type":"boolean","description":"Trust for authentication within ISE","example":false},"validateCertificateExtensions":{"type":"boolean","description":"Validate trust certificate extension","example":false}}},"TrustCertGetAllRsp":{"title":"TrustCertGetAllRsp","type":"object","properties":{"nextPage":{"$ref":"#/components/schemas/Link"},"previousPage":{"$ref":"#/components/schemas/Link"},"response":{"type":"array","items":{"$ref":"#/components/schemas/TrustCertificateResponse"}},"version":{"type":"string"}}},"TrustCertGetByIdRsp":{"title":"TrustCertGetByIdRsp","type":"object","properties":{"response":{"$ref":"#/components/schemas/TrustCertificateResponse"},"version":{"type":"string"}}},"TrustCertificateResponse":{"title":"TrustCertificateResponse","type":"object","properties":{"authenticateBeforeCRLReceived":{"type":"string","description":"Switch to enable/disable authentication before receiving CRL"},"automaticCRLUpdate":{"type":"string","description":"Switch to enable/disable automatic CRL update"},"automaticCRLUpdatePeriod":{"type":"string","description":"Automatic CRL update period"},"automaticCRLUpdateUnits":{"type":"string","description":"Unit of time of automatic CRL update"},"crlDistributionUrl":{"type":"string","description":"CRL Distribution URL"},"crlDownloadFailureRetries":{"type":"string","description":"If CRL download fails, wait time before retry"},"crlDownloadFailureRetriesUnits":{"type":"string","description":"Unit of time before retry if CRL download fails"},"description":{"type":"string","description":"Description of trust certificate"},"downloadCRL":{"type":"string","description":"Switch to enable/disable download of CRL"},"enableOCSPValidation":{"type":"string","description":"Switch to enable/disable OCSP Validation"},"enableServerIdentityCheck":{"type":"string","description":"Switch to enable/disable Server Identity Check"},"expirationDate":{"type":"string","description":"The time and date past which the certificate is no longer valid"},"friendlyName":{"type":"string","description":"Friendly name of trust certificate"},"id":{"type":"string","description":"ID of trust certificate"},"ignoreCRLExpiration":{"type":"string","description":"Switch to enable/disable ignore CRL Expiration"},"internalCA":{"type":"boolean","example":false},"isReferredInPolicy":{"type":"boolean","example":false},"issuedBy":{"type":"string","description":"The entity that verified the information and signed the certificate"},"issuedTo":{"type":"string","description":"Entity to which trust certificate is issued"},"keySize":{"type":"string","description":"The length of key used for encrypting trust certificate"},"link":{"$ref":"#/components/schemas/Link"},"nonAutomaticCRLUpdatePeriod":{"type":"string","description":"Non automatic CRL update period"},"nonAutomaticCRLUpdateUnits":{"type":"string","description":"Unit of time of non automatic CRL update"},"rejectIfNoStatusFromOCSP":{"type":"string","description":"Switch to reject certificate if there is no status from OCSP"},"rejectIfUnreachableFromOCSP":{"type":"string","description":"Switch to reject certificate if unreachable from OCSP"},"selectedOCSPService":{"type":"string","description":"Name of selected OCSP Service"},"serialNumberDecimalFormat":{"type":"string","description":"Used to uniquely identify the certificate within a CA's systems"},"sha256Fingerprint":{"type":"string"},"signatureAlgorithm":{"type":"string","description":"Algorithm used for encrypting trust certificate"},"status":{"type":"string"},"subject":{"type":"string","description":"The Subject or entity with which public key of trust certificate is associated"},"trustedFor":{"type":"string","description":"Different services for which the certificated is trusted"},"validFrom":{"type":"string","description":"The earliest time and date on which the certificate is valid"}}},"UpdateSystemCertRequest":{"title":"UpdateSystemCertRequest","required":["allowReplacementOfPortalGroupTag"],"type":"object","properties":{"admin":{"type":"boolean","description":"Use certificate to authenticate the ISE Admin Portal","example":false},"allowReplacementOfPortalGroupTag":{"type":"boolean","description":"Allow Replacement of Portal Group Tag (required)","example":false},"description":{"type":"string","description":"Description of System Certificate","example":"Description of Certificate"},"eap":{"type":"boolean","description":"Use certificate for EAP protocols that use SSL/TLS tunneling","example":false},"expirationTTLPeriod":{"type":"integer","format":"int32","example":36},"expirationTTLUnits":{"type":"string","enum":["days","months","weeks","years"]},"ims":{"type":"boolean","description":"Use certificate for the ISE Messaging Service","example":false},"name":{"type":"string","description":"Name of the certificate","example":"System Certificate"},"portal":{"type":"boolean","description":"Use for portal","example":false},"portalGroupTag":{"type":"string","description":"Set Group tag","example":"Default Portal Certificate Group"},"pxgrid":{"type":"boolean","description":"Use certificate for the pxGrid Controller","example":false},"radius":{"type":"boolean","description":"Use certificate for the RADSec server","example":false},"renewSelfSignedCertificate":{"type":"boolean","description":"Renew Self Signed Certificate","example":false},"saml":{"type":"boolean","description":"Use certificate for SAML Signing","example":false}}},"UpdateSystemCertRespPayload":{"title":"UpdateSystemCertRespPayload","type":"object","properties":{"response":{"$ref":"#/components/schemas/UpdateSystemCertResponse"},"version":{"type":"string"}}},"UpdateSystemCertResponse":{"title":"UpdateSystemCertResponse","type":"object","properties":{"id":{"type":"string","description":"ID of the imported trust certificate"},"link":{"$ref":"#/components/schemas/Link"},"message":{"type":"string","description":"Response message on import of system or trust certificate"},"status":{"type":"string","description":"HTTP response status after import"}}},"UpdateTrustCertRequest":{"title":"UpdateTrustCertRequest","required":["name"],"type":"object","properties":{"authenticateBeforeCRLReceived":{"type":"boolean","description":"Switch to enable/disable CRL Verification if CRL is not Received","example":false},"automaticCRLUpdate":{"type":"boolean","description":"Switch to enable/disable automatic CRL update","example":false},"automaticCRLUpdatePeriod":{"type":"integer","description":"Automatic CRL update period","format":"int32","example":5},"automaticCRLUpdateUnits":{"type":"string","description":"Unit of time for automatic CRL update","example":"Minutes","enum":["Days","Hours","Minutes","Weeks"]},"crlDistributionUrl":{"type":"string","description":"CRL Distribution URL"},"crlDownloadFailureRetries":{"type":"integer","description":"If CRL download fails, wait time before retry","format":"int32","example":10},"crlDownloadFailureRetriesUnits":{"type":"string","description":"Unit of time before retry if CRL download fails","example":"Minutes","enum":["Days","Hours","Minutes","Weeks"]},"description":{"type":"string","description":"Description for trust certificate"},"downloadCRL":{"type":"boolean","description":"Switch to enable/disable download of CRL","example":false},"enableOCSPValidation":{"type":"boolean","description":"Switch to enable/disable OCSP Validation","example":false},"enableServerIdentityCheck":{"type":"boolean","description":"Switch to enable/disable verification if HTTPS or LDAP server certificate name fits the configured server URL","example":false},"ignoreCRLExpiration":{"type":"boolean","description":"Switch to enable/disable ignore CRL Expiration","example":false},"name":{"type":"string","description":"Friendly name of the certificate","example":"Trust Certificate"},"nonAutomaticCRLUpdatePeriod":{"type":"integer","description":"Non automatic CRL update period","format":"int32","example":1},"nonAutomaticCRLUpdateUnits":{"type":"string","description":"Unit of time of non automatic CRL update","example":"Hours","enum":["Days","Hours","Minutes","Weeks"]},"rejectIfNoStatusFromOCSP":{"type":"boolean","description":"Switch to reject certificate if there is no status from OCSP","example":false},"rejectIfUnreachableFromOCSP":{"type":"boolean","description":"Switch to reject certificate if unreachable from OCSP","example":false},"selectedOCSPService":{"type":"string","description":"Name of selected OCSP Service"},"status":{"type":"string","example":"Enabled","enum":["Disabled","Enabled"]},"trustForCertificateBasedAdminAuth":{"type":"boolean","description":"Trust for Certificate based Admin authentication","example":false},"trustForCiscoServicesAuth":{"type":"boolean","description":"Trust for authentication of Cisco Services","example":false},"trustForClientAuth":{"type":"boolean","description":"Trust for client authentication and Syslog","example":false},"trustForIseAuth":{"type":"boolean","description":"Trust for authentication within ISE","example":false}}},"UpdateTrustCertRespPayload":{"title":"UpdateTrustCertRespPayload","type":"object","properties":{"response":{"$ref":"#/components/schemas/UpdateTrustCertResponse"},"version":{"type":"string"}}},"UpdateTrustCertResponse":{"title":"UpdateTrustCertResponse","type":"object","properties":{"id":{"type":"string","description":"ID of the trust certificate"},"link":{"$ref":"#/components/schemas/Link"},"message":{"type":"string","description":"Response message on successful update of trust certificate"}}}}}}