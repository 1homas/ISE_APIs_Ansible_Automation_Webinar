{"openapi":"3.0.3","info":{"title":"Cisco ISE API - Policy","version":"1.0.0"},"servers":[{"url":"https://ise.securitydemo.net:443","description":"Inferred Url"}],"tags":[{"name":"device-admin-api-controller","description":"the device-admin API"},{"name":"network-access-api-controller","description":"the network-access API"}],"paths":{"/api/v1/policy/device-admin/command-sets":{"get":{"tags":["Device Administration - Command Set"],"summary":"Device Admin - Return list of command sets.","description":"<p>Device Admin - Return list of command sets.<br> (Other CRUD APIs available throught ERS)<br></p>","operationId":"getDeviceAdminCommandSets","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"list of commands set","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CommandSet"}}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/condition":{"get":{"tags":["Device Administration - Conditions"],"summary":"Device Admin - Returns list of library conditions.","description":"Device Admin - Returns list of library conditions.","operationId":"getDeviceAdminConditions","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"List of library conditions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LibraryConditionListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"post":{"tags":["Device Administration - Conditions"],"summary":"Device Admin - Creates a library condition.","description":"Device Admin - Creates a library condition.","operationId":"postDeviceAdminCondition","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Condition"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LibraryConditionResponseEntity"}}}},"201":{"description":"Library condition object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LibraryConditionResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/condition/authentication":{"get":{"tags":["Device Administration - Conditions"],"summary":"Device Admin - Returns list of library conditions for authentication rules.","description":"Device Admin - Returns list of library conditions for authentication rules.","operationId":"getDeviceAdminConditionsForAuthenticationRule","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"List of library conditions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LibraryConditionListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/condition/authorization":{"get":{"tags":["Device Administration - Conditions"],"summary":"Device Admin - Returns list of library conditions for authorization rules.","description":"Device Admin - Returns list of library conditions for authorization rules.","operationId":"getDeviceAdminConditionsForAuthorizationRule","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"List of library conditions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LibraryConditionListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/condition/condition-by-name/{conditionName}":{"get":{"tags":["Device Administration - Conditions"],"summary":"Device Admin - Returns a library condition.","description":"Device Admin - Returns a library condition.","operationId":"getDeviceAdminConditionByConditionName","parameters":[{"name":"conditionName","in":"path","description":"Condition name","required":true,"style":"simple","schema":{"type":"string"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Library condition object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LibraryConditionResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"put":{"tags":["Device Administration - Conditions"],"summary":"Device Admin - Update library condition by condition name.","description":"Device Admin - Update library condition using condition name.","operationId":"putDeviceAdminConditionByConditionName","parameters":[{"name":"conditionName","in":"path","description":"Condition name","required":true,"style":"simple","schema":{"type":"string"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Condition"}}}},"responses":{"200":{"description":"Library condition object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LibraryConditionResponseEntity"}}}},"201":{"description":"Created"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"delete":{"tags":["Device Administration - Conditions"],"summary":"Device Admin - Delete a library condition by condition Name.","description":"NDevice Admin - Delete a library condition using condition Name.","operationId":"deleteDeviceAdminConditionByConditionName","parameters":[{"name":"conditionName","in":"path","description":"Condition name","required":true,"style":"simple","schema":{"type":"string"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with object ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"204":{"description":"No Content"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/condition/policyset":{"get":{"tags":["Device Administration - Conditions"],"summary":"Device Admin - Returns list of library conditions for policy sets.","description":"Device Admin - Returns list of library conditions for policy sets.","operationId":"getDeviceAdminConditionsForPolicySet","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"List of library conditions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LibraryConditionListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/condition/{conditionId}":{"get":{"tags":["Device Administration - Conditions"],"summary":"Device Admin - Returns a library condition.","description":"Device Admin - Returns a library condition.","operationId":"getDeviceAdminConditionByConditionId","parameters":[{"name":"conditionId","in":"path","description":"Condition id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Library condition object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LibraryConditionResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"put":{"tags":["Device Administration - Conditions"],"summary":"Device Admin - Update library condition.","description":"Device Admin - Update library condition.","operationId":"putDeviceAdminConditionByConditionId","parameters":[{"name":"conditionId","in":"path","description":"Condition id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Condition"}}}},"responses":{"200":{"description":"Library condition object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LibraryConditionResponseEntity"}}}},"201":{"description":"Created"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"delete":{"tags":["Device Administration - Conditions"],"summary":"Device Admin - Delete a library condition.","description":"Device Admin - Delete a library condition.","operationId":"deleteDeviceAdminConditionByConditionId","parameters":[{"name":"conditionId","in":"path","description":"Condition id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with object ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"204":{"description":"No Content"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/dictionaries/authentication":{"get":{"tags":["Device Administration - Dictionary Attributes List"],"summary":"Network Access - Returns list of dictionary attributes for authentication.","description":"Network Access - Returns list of dictionary attributes for authentication.","operationId":"getDeviceAdminDictionariesAuthentication","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"list of DictionaryAttributeResponseEntity objects","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryAttributeListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/dictionaries/authorization":{"get":{"tags":["Device Administration - Dictionary Attributes List"],"summary":"Network Access - Returns list of dictionary attributes for authorization.","description":"Network Access - Returns list of dictionary attributes for authorization.","operationId":"getDeviceAdminDictionariesAuthorization","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"list of DictionaryAttributeResponseEntity objects","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryAttributeListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/dictionaries/policyset":{"get":{"tags":["Device Administration - Dictionary Attributes List"],"summary":"Network Access - Returns list of dictionary attributes for policyset.","description":"Network Access - Returns list of dictionary attributes for policyset.","operationId":"getDeviceAdminDictionariesPolicyset","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"list of DictionaryAttributeResponseEntity objects","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryAttributeListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/identity-stores":{"get":{"tags":["Device Administration - Identity Stores"],"summary":"Device Admin - Return list of identity stores for authentication.","description":"<p>Device Admin - Return list of identity stores for authentication.<br> (Other CRUD APIs available throught ERS)<br></p>","operationId":"getDeviceAdminIdentityStores","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"list of identity stores","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/IdentityStore"}}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/network-condition":{"get":{"tags":["Device Administration - Network Conditions"],"summary":"Device Admin - Returns a list of network conditions.","description":"Device Admin - Returns a list of network conditions.","operationId":"getDeviceAdminNetworkConditions","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"list of network conditions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkConditionListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"post":{"tags":["Device Administration - Network Conditions"],"summary":"Device Admin- Creates network condition.","description":"Device Admin- Creates network condition.","operationId":"postDeviceAdminNetworkCondition","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkCondition"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkConditionResponseEntity"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkConditionResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/network-condition/{conditionId}":{"get":{"tags":["Device Administration - Network Conditions"],"summary":"Device Admin - Returns a network condition.","description":"Device Admin - Returns a network condition.","operationId":"getDeviceAdminNetworkConditionByConditionId","parameters":[{"name":"conditionId","in":"path","description":"Condition id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Network condition","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkConditionResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"put":{"tags":["Device Administration - Network Conditions"],"summary":"Device Admin - Update network condition.","description":"Device Admin - Update network condition.","operationId":"putDeviceAdminNetworkConditionByConditionId","parameters":[{"name":"conditionId","in":"path","description":"Condition id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkCondition"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkConditionResponseEntity"}}}},"201":{"description":"Created"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"delete":{"tags":["Device Administration - Network Conditions"],"summary":"Device Admin - Delete network condition.","description":"Device Admin - Delete network condition.","operationId":"deleteDeviceAdminNetworkConditionByConditionId","parameters":[{"name":"conditionId","in":"path","description":"Condition id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with object ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"204":{"description":"No Content"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/policy-set":{"get":{"tags":["Device Administration - Policy Set"],"summary":"Device Admin - List of policy sets.","description":"Device Admin - List of policy sets.","operationId":"getDeviceAdminPolicySetList","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"List of network access policy sets","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PolicySetListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"post":{"tags":["Device Administration - Policy Set"],"summary":"Device Admin - Create a new policy set.","description":"Device Admin - Create a new policy set.","operationId":"createDeviceAdminPolicySet","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PolicySet"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PolicySetResponseEntity"}}}},"201":{"description":"PolicySet response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PolicySetResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/policy-set/global-exception":{"get":{"tags":["Device Administration - Authorization Global Exception Rules"],"summary":"Device Admin - Get global execption rules.","description":"Device Admin - Get global execption rules.","operationId":"getDeviceAdminPolicySetGlobalExceptionRuleList","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Device Admin Authorization Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceAdminAuthorizationRuleListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"post":{"tags":["Device Administration - Authorization Global Exception Rules"],"summary":"Device Admin - Create global exception authorization rule.","description":"Device Admin - Create global exception authorization rule.","operationId":"createDeviceAdminPolicySetGlobalException","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RuleAuthorizationDeviceAdmin"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceAdminAuthorizationRuleResponseEntity"}}}},"201":{"description":"Device Admin Authorization Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceAdminAuthorizationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/policy-set/global-exception/reset-hitcount":{"post":{"tags":["Device Administration - Authorization Global Exception Rules"],"summary":"Device Admin - Reset HitCount for Global Exceptions","description":"Device Admin - Reset HitCount for Global Exceptions","operationId":"resetHitCountsDeviceAdminGlobalExceptions","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with success message","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponseEntity"}}}},"201":{"description":"Created"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/policy-set/global-exception/{ruleId}":{"get":{"tags":["Device Administration - Authorization Global Exception Rules"],"summary":"Device Admin - Get global exception rule attributes.","description":"Device Admin - Get global exception rule attribute","operationId":"getDeviceAdminPolicySetGlobalExceptionByRuleId","parameters":[{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Device Admin Authorization Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceAdminAuthorizationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"put":{"tags":["Device Administration - Authorization Global Exception Rules"],"summary":"Device Admin - Update global exception authorization rule.","description":"Device Admin - Update global exception authorization rule.","operationId":"putDeviceAdminPolicySetGlobalExceptionByRuleId","parameters":[{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RuleAuthorizationDeviceAdmin"}}}},"responses":{"200":{"description":"Device Admin Authorization Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceAdminAuthorizationRuleResponseEntity"}}}},"201":{"description":"Created"},"204":{"description":"No Content","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceAdminAuthorizationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"delete":{"tags":["Device Administration - Authorization Global Exception Rules"],"summary":"Device Admin - Delete global exception authorization rule.","description":"Device Admin - Delete global exception authorization rule.","operationId":"deleteDeviceAdminPolicysetGlobalExceptionByRuleId","parameters":[{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with object ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"204":{"description":"No Content","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/policy-set/reset-hitcount":{"post":{"tags":["Device Administration - Policy Set"],"summary":"Device Admin - Reset HitCount for PolicySets","description":"Device Admin - Reset HitCount for PolicySets","operationId":"resetHitCountsDeviceAdminPolicySets","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with success message","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponseEntity"}}}},"201":{"description":"Created"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/policy-set/{policyId}":{"get":{"tags":["Device Administration - Policy Set"],"summary":"Device Admin - Get policy set attributes.","description":"Device Admin - Get policy set attributes.","operationId":"getDeviceAdminPolicySetById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"PolicySet response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PolicySetResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"put":{"tags":["Device Administration - Policy Set"],"summary":"Device Admin - Update a policy set.","description":"Device Admin - Update a policy set.","operationId":"updateDeviceAdminPolicySetById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PolicySet"}}}},"responses":{"200":{"description":"PolicySet response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PolicySetResponseEntity"}}}},"201":{"description":"Created"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"delete":{"tags":["Device Administration - Policy Set"],"summary":"Device Admin - Delete a policy set.","description":"Device Admin - Delete a policy set.","operationId":"deleteDeviceAdminPolicySetById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with object ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"204":{"description":"No Content"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/policy-set/{policyId}/authentication":{"get":{"tags":["Device Administration - Authentication Rules"],"summary":"Device Admin - Get authentication rules.","description":"Device Admin - Get authentication rules.","operationId":"getDeviceAdminPolicyByIdAuthenticationRuleList","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Authentication Rule list response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthenticationRuleListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"post":{"tags":["Device Administration - Authentication Rules"],"summary":"Device Admin - Create authentication rule.","description":"Device Admin - Create authentication rule.","operationId":"createDeviceAdminPolicyByIdAuthenticationRule","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RuleAuthentication"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthenticationRuleResponseEntity"}}}},"201":{"description":"Authentication Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthenticationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/policy-set/{policyId}/authentication/reset-hitcount":{"post":{"tags":["Device Administration - Authentication Rules"],"summary":"Device Admin - Reset HitCount for Authentication Rules","description":"Device Admin - Reset HitCount for Authentication Rules","operationId":"resetHitCountsDeviceAdminPolicyByIdAuthenticationRules","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with success message","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponseEntity"}}}},"201":{"description":"Created"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/policy-set/{policyId}/authentication/{ruleId}":{"get":{"tags":["Device Administration - Authentication Rules"],"summary":"Device Admin - Get rule attributes.","description":"Device Admin - Get rule attributes.","operationId":"getDeviceAdminPolicyByIdAuthenticationRuleById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Authentication Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthenticationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"put":{"tags":["Device Administration - Authentication Rules"],"summary":"Device Admin - - Update rule.","description":"Device Admin - - Update rule.","operationId":"updateDeviceAdminPolicyByIdAuthenticationRuleById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RuleAuthentication"}}}},"responses":{"200":{"description":"Authentication Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthenticationRuleResponseEntity"}}}},"201":{"description":"Created"},"204":{"description":"No Content","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthenticationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"delete":{"tags":["Device Administration - Authentication Rules"],"summary":"Device Admin - Delete rule.","description":"Device Admin - Delete rule.","operationId":"deleteDeviceAdminPolicyByIdAuthenticationRuleById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with object ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"204":{"description":"No Content","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/policy-set/{policyId}/authorization":{"get":{"tags":["Device Administration - Authorization Rules"],"summary":"Device Admin - Get authorization rules.","description":"Device Admin - Get authorization rules.","operationId":"getDeviceAdminPolicyByIdAuthorizationRuleList","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Device Admin Authorization Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceAdminAuthorizationRuleListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"post":{"tags":["Device Administration - Authorization Rules"],"summary":"Device Admin - Create authorization rule.","description":"Device Admin - Create authorization rule.","operationId":"createDeviceAdminPolicyByIdAuthorizationRule","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RuleAuthorizationDeviceAdmin"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceAdminAuthorizationRuleResponseEntity"}}}},"201":{"description":"Device Admin Authorization Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceAdminAuthorizationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/policy-set/{policyId}/authorization/reset-hitcount":{"post":{"tags":["Device Administration - Authorization Rules"],"summary":"Device Admin - Reset HitCount for Authorization Rules","description":"Device Admin - Reset HitCount for Authorization Rules","operationId":"resetHitCountsDeviceAdminPolicyByIdAuthorizationRules","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with success message","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponseEntity"}}}},"201":{"description":"Created"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/policy-set/{policyId}/authorization/{ruleId}":{"get":{"tags":["Device Administration - Authorization Rules"],"summary":"Device Admin - Get authorization rule attributes.","description":"Device Admin - Get authorization rule attributes.","operationId":"getDeviceAdminPolicyByIdAuthorizationRuleById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Device Admin Authorization Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceAdminAuthorizationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"put":{"tags":["Device Administration - Authorization Rules"],"summary":"Device Admin - Update authorization rule.","description":"Device Admin - Update authorization rule.","operationId":"updateDeviceAdminPolicyByIdAuthorizationRuleById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RuleAuthorizationDeviceAdmin"}}}},"responses":{"200":{"description":"Device Admin Authorization Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceAdminAuthorizationRuleResponseEntity"}}}},"201":{"description":"Created"},"204":{"description":"No Content","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceAdminAuthorizationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"delete":{"tags":["Device Administration - Authorization Rules"],"summary":"Device Admin - Delete authorization rule.","description":"Device Admin - Delete authorization rule.","operationId":"deleteDeviceAdminPolicyByIdAuthorizationRuleById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with object ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"204":{"description":"No Content","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/policy-set/{policyId}/exception":{"get":{"tags":["Device Administration - Authorization Exception Rules"],"summary":"Device Admin - Get local exception rules.","description":"Device Admin - Get local exception rules.","operationId":"getDeviceAdminPolicyByIdLocalExceptionRuleList","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Device Admin Authorization Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceAdminAuthorizationRuleListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"post":{"tags":["Device Administration - Authorization Exception Rules"],"summary":"Device Admin - Create local authorization exception rule.","description":"Device Admin - Create local authorization exception rule.","operationId":"createDeviceAdminPolicyByIdLocalExceptionRule","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RuleAuthorizationDeviceAdmin"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceAdminAuthorizationRuleResponseEntity"}}}},"201":{"description":"Device Admin Authorization Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceAdminAuthorizationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/policy-set/{policyId}/exception/reset-hitcount":{"post":{"tags":["Device Administration - Authorization Exception Rules"],"summary":"Device Admin - Reset HitCount for local exceptions","description":"Device Admin - Reset HitCount for local exceptions","operationId":"resetHitCountsDeviceAdminPolicyByIdLocalExceptions","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with success message","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponseEntity"}}}},"201":{"description":"Created"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/policy-set/{policyId}/exception/{ruleId}":{"get":{"tags":["Device Administration - Authorization Exception Rules"],"summary":"Device Admin - Get local exception rule attributes.","description":"Device Admin - Get local exception rule attributes.","operationId":"getDeviceAdminPolicyByIdLocalExceptionRuleById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Device Admin Authorization Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceAdminAuthorizationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"put":{"tags":["Device Administration - Authorization Exception Rules"],"summary":"Device Admin - Update local exception rule.","description":"Device Admin - Update local exception rule.","operationId":"updateDeviceAdminPolicyByIdLocalExceptionRuleById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RuleAuthorizationDeviceAdmin"}}}},"responses":{"200":{"description":"Device Admin Authorization Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceAdminAuthorizationRuleResponseEntity"}}}},"201":{"description":"Created"},"204":{"description":"No Content","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceAdminAuthorizationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"delete":{"tags":["Device Administration - Authorization Exception Rules"],"summary":"Device Admin - Delete local exception rule.","description":"Device Admin - Delete local exception rule.","operationId":"deleteDeviceAdminPolicyByIdLocalExceptionRuleById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with object ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"204":{"description":"No Content","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/profiles":{"get":{"tags":["Device Administration - Profiles"],"summary":"Device Admin - Returns list of profiles.","description":"<p>Device Admin - Returns list of profiles.<br> (Other CRUD APIs available throught ERS)<br></p>","operationId":"getDeviceAdminProfiles","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"list of profiles","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Profile"}}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/service-names":{"get":{"tags":["Device Administration - Service Names"],"summary":"Device Admin - Returns list of allowed protocols and server sequences.","description":"<p>Returns list of Allowed Protocols and Server Sequences for Device Admin Policy Set results. <br> 'isLocalAuthorization' property is available only for Network Access Policy Set results of type Server Sequence. <br> (Other CRUD APIs available throught ERS)<br></p>","operationId":"getDeviceAdminServiceNames","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"list of allowed protocols and server sequences","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ServiceName"}}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/time-condition":{"get":{"tags":["Device Administration - Time/Date Conditions"],"summary":"Device Admin - Returns a list of time and date conditions.","description":"Device Admin - Returns a list of time and date conditions.","operationId":"getDeviceAdminTimeConditions","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"list of time/date conditions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TimeAndDateConditionListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"post":{"tags":["Device Administration - Time/Date Conditions"],"summary":"Device Admin - Creates time/date condition.","description":"Device Admin - Creates time/date condition.","operationId":"postDeviceAdminTimeCondition","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TimeAndDateCondition"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TimeAndDateConditionResponseEntity"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TimeAndDateConditionResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/device-admin/time-condition/{conditionId}":{"get":{"tags":["Device Administration - Time/Date Conditions"],"summary":"Device Admin - Returns a network condition.","description":"Device Admin - Returns a network condition.","operationId":"getDeviceAdminTimeConditionByConditionId","parameters":[{"name":"conditionId","in":"path","description":"Condition id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Network condition","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TimeAndDateConditionResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"put":{"tags":["Device Administration - Time/Date Conditions"],"summary":"Device Admin - Update network condition.","description":"Device Admin - Update network condition.","operationId":"putDeviceAdminTimeConditionByConditionId","parameters":[{"name":"conditionId","in":"path","description":"Condition id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TimeAndDateCondition"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TimeAndDateConditionResponseEntity"}}}},"201":{"description":"Created"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"delete":{"tags":["Device Administration - Time/Date Conditions"],"summary":"Device Admin - Delete Time/Date condition.","description":"Device Admin - Delete Time/Date condition.","operationId":"deleteDeviceAdminTimeConditionByConditionId","parameters":[{"name":"conditionId","in":"path","description":"Condition id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with object ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"204":{"description":"No Content"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/condition":{"get":{"tags":["Network Access - Conditions"],"summary":"Network Access - Returns all library conditions","description":"Network Access - Returns all library conditions","operationId":"getNetworkAccessConditions","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"List of library conditions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LibraryConditionListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"post":{"tags":["Network Access - Conditions"],"summary":"Network Access - Creates a library condition.","description":"Network Access - Creates a library condition: <ul> <li> Library Condition has hierarchical structure which define a set of condition for which authentication and authorization policy rules could be match.</li> <li> Condition can be compose from single dictionary attribute name and value using model <b>LibraryConditionAttributes</b> , or from combination of dictionary attributes with logical operation of AND/OR between them, using models: <b>LibraryConditionAndBlock</b> or <b>LibraryConditionOrBlock</b>.</li> <li> When using AND/OR blocks, the condition will include inner layers inside these blocks, these layers are built using the inner condition models: <b>ConditionAttributes</b>, <b>ConditionAndBlock</b>, <b>ConditionOrBlock</b>, that represent dynamically built Conditions which are not stored in the conditions Library, or using <b>ConditionReference</b>, which includes an ID to existing stored condition in the library.</li> <li> The LibraryCondition models can only be used in the outer-most layer (root of the condition) and must always include the condition name.</li> <li> When using one of the 3 inner condition models (<b>ConditionAttributes, ConditionAndBlock, ConditionOrBlock</b>), condition name cannot be included in the request, since these will not be stored in the conditions library, and used only as inner members of the root condition.</li> <li> When using <b>ConditionReference</b> model in inner layers, the condition name is not required.</li> <li> ConditionReference objects can also include a reference ID to a condition of type <b>TimeAndDate</b>.</li> </ul> ","operationId":"postNetworkAccessCondition","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Condition"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LibraryConditionResponseEntity"}}}},"201":{"description":"Library condition object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LibraryConditionResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/condition/authentication":{"get":{"tags":["Network Access - Conditions"],"summary":"Network Access - Returns list of library conditions for Authentication rules scope.","description":"Network Access - Returns list of library conditions for Authentication rules scope.","operationId":"getNetworkAccessConditionsForAuthenticationRule","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"List of library conditions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LibraryConditionListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/condition/authorization":{"get":{"tags":["Network Access - Conditions"],"summary":"Network Access - Returns list of library conditions for Authorization rules scope.","description":"Network Access - Returns list of library conditions for Authorization rules scope.","operationId":"getNetworkAccessConditionsForAuthorizationRule","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"List of library conditions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LibraryConditionListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/condition/condition-by-name/{conditionName}":{"get":{"tags":["Network Access - Conditions"],"summary":"Network Access - Returns a library condition.","description":"Network Access - Returns a library condition.","operationId":"getNetworkAccessConditionByConditionName","parameters":[{"name":"conditionName","in":"path","description":"Condition name","required":true,"style":"simple","schema":{"type":"string"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Library condition object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LibraryConditionResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"put":{"tags":["Network Access - Conditions"],"summary":"Network Access - Update library condition by condition name.","description":"Network Access - Update library condition using condition name.","operationId":"putNetworkAccessConditionByConditionName","parameters":[{"name":"conditionName","in":"path","description":"Condition name","required":true,"style":"simple","schema":{"type":"string"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Condition"}}}},"responses":{"200":{"description":"Library condition object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LibraryConditionResponseEntity"}}}},"201":{"description":"Created"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"delete":{"tags":["Network Access - Conditions"],"summary":"Network Access - Delete a library condition by condition Name.","description":"Network Access - Delete a library condition using condition Name.","operationId":"deleteNetworkAccessConditionByConditionName","parameters":[{"name":"conditionName","in":"path","description":"Condition name","required":true,"style":"simple","schema":{"type":"string"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with object ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"204":{"description":"No Content"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/condition/policyset":{"get":{"tags":["Network Access - Conditions"],"summary":"Network Access - Returns list of library conditions for PolicySet scope.","description":"Network Access - Returns list of library conditions for PolicySet scope.","operationId":"getNetworkAccessConditionsForPolicySet","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"List of library conditions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LibraryConditionListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/condition/{conditionId}":{"get":{"tags":["Network Access - Conditions"],"summary":"Network Access - Returns a library condition.","description":"Network Access - Returns a library condition.","operationId":"getNetworkAccessConditionByConditionId","parameters":[{"name":"conditionId","in":"path","description":"Condition id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Library condition object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LibraryConditionResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"put":{"tags":["Network Access - Conditions"],"summary":"Network Access - Update library condition.","description":"Network Access - Update library condition.","operationId":"putNetworkAccessConditionByConditionId","parameters":[{"name":"conditionId","in":"path","description":"Condition id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Condition"}}}},"responses":{"200":{"description":"Library condition object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LibraryConditionResponseEntity"}}}},"201":{"description":"Created"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"delete":{"tags":["Network Access - Conditions"],"summary":"Network Access - Delete a library condition.","description":"Network Access - Delete a library condition.","operationId":"deleteNetworkAccessConditionByConditionId","parameters":[{"name":"conditionId","in":"path","description":"Condition id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with object ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"204":{"description":"No Content"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/dictionaries":{"get":{"tags":["Network Access - Dictionary"],"summary":"Network Access - Returns a list of Dictionaries.","description":"Get all Dictionaries.","operationId":"getNetworkAccessDictionaries","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response containing DictionaryListResponseEntity object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"post":{"tags":["Network Access - Dictionary"],"summary":"Network Access - Create a new Dictionary.","description":"Network Access - Create a new Dictionary.","operationId":"postNetworkAccessDictionaries","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Dictionary"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryResponseEntity"}}}},"201":{"description":"Response containing DictionaryResponseEntity object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"},"409":{"description":"Conflict in the current state of the resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/dictionaries/authentication":{"get":{"tags":["Network Access - Dictionary Attributes List"],"summary":"Network Access - Returns list of dictionary attributes for authentication.","description":"Network Access - Returns list of dictionary attributes for authentication.","operationId":"getNetworkAccessDictionariesAuthentication","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"list of DictionaryAttributeResponseEntity objects","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryAttributeListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/dictionaries/authorization":{"get":{"tags":["Network Access - Dictionary Attributes List"],"summary":"Network Access - Returns list of dictionary attributes for authorization.","description":"Network Access - Returns list of dictionary attributes for authorization.","operationId":"getNetworkAccessDictionariesAuthorization","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"list of DictionaryAttributeResponseEntity objects","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryAttributeListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/dictionaries/policyset":{"get":{"tags":["Network Access - Dictionary Attributes List"],"summary":"Network Access - Returns list of dictionary attributes for policyset.","description":"Network Access - Returns list of dictionary attributes for policyset.","operationId":"getNetworkAccessDictionariesPolicyset","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"list of DictionaryAttributeResponseEntity objects","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryAttributeListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/dictionaries/{dictionaryName}/attribute":{"get":{"tags":["Network Access - Dictionary Attribute"],"summary":"Returns a list of Dictionary Attributes for an existing Dictionary.","description":"Returns a list of Dictionary Attributes for an existing Dictionary.","operationId":"getNetworkAccessDictionaryAttributesByDictionaryName","parameters":[{"name":"dictionaryName","in":"path","description":"the name of the dictionary the dictionary attribute belongs to","required":true,"style":"simple","schema":{"type":"string"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"list of DictionaryAttributeResponseEntity objects","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryAttributeListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"post":{"tags":["Network Access - Dictionary Attribute"],"summary":"Create a new Dictionary Attribute for an existing Dictionary.","description":"Create a new Dictionary Attribute for an existing Dictionary.","operationId":"postNetworkAccessDictionariesByDictionaryNameAttribute","parameters":[{"name":"dictionaryName","in":"path","description":"the name of the dictionary the dictionary attribute belongs to","required":true,"style":"simple","schema":{"type":"string"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryAttribute"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryAttributeResponseEntity"}}}},"201":{"description":"Response containaing DictionaryAttributeResponseEntity Object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryAttributeResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/dictionaries/{dictionaryName}/attribute/{attributeName}":{"get":{"tags":["Network Access - Dictionary Attribute"],"summary":"Get a Dictionary Attribute.","description":"Get a Dictionary Attribute.","operationId":"getNetworkAccessDictionariesByDictionaryNameAttributeByAttributeName","parameters":[{"name":"attributeName","in":"path","description":"the dictionary attribute name","required":true,"style":"simple","schema":{"type":"string"}},{"name":"dictionaryName","in":"path","description":"the name of the dictionary the dictionary attribute belongs to","required":true,"style":"simple","schema":{"type":"string"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response containaing DictionaryAttributeResponseEntity Object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryAttributeResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"put":{"tags":["Network Access - Dictionary Attribute"],"summary":"Update a Dictionary Attribute.","description":"Update a Dictionary Attribute","operationId":"putNetworkAccessDictionariesByDictionaryNameAttributeByAttributeName","parameters":[{"name":"attributeName","in":"path","description":"the dictionary attribute name","required":true,"style":"simple","schema":{"type":"string"}},{"name":"dictionaryName","in":"path","description":"the name of the dictionary the dictionary attribute belongs to","required":true,"style":"simple","schema":{"type":"string"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryAttribute"}}}},"responses":{"200":{"description":"Response containaing DictionaryAttributeResponseEntity Object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryAttributeResponseEntity"}}}},"201":{"description":"Created"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"409":{"description":"Conflict in the current state of the resource","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"delete":{"tags":["Network Access - Dictionary Attribute"],"summary":"Delete a Dictionary Attribute.","description":"Delete a Dictionary Attribute.","operationId":"deleteNetworkAccessDictionariesByDictionaryNameAttributeByAttributeName","parameters":[{"name":"attributeName","in":"path","description":"the dictionary attribute name","required":true,"style":"simple","schema":{"type":"string"}},{"name":"dictionaryName","in":"path","description":"the name of the dictionary the dictionary attribute belongs to","required":true,"style":"simple","schema":{"type":"string"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response containaing DictionaryAttributeResponseEntity Object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryAttributeResponseEntity"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryAttributeResponseEntity"}}}},"204":{"description":"No Content","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryAttributeResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/dictionaries/{name}":{"get":{"tags":["Network Access - Dictionary"],"summary":"GET a dictionary by name","description":"GET a dictionary by name","operationId":"getNetworkAccessDictionary","parameters":[{"name":"name","in":"path","description":"the dictionary name","required":true,"style":"simple","schema":{"type":"string"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response containing DictionaryResponseEntity object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"put":{"tags":["Network Access - Dictionary"],"summary":"Network Access - Update a Dictionary.","description":"Network Access - Update a Dictionary.","operationId":"putNetworkAccessDictionariesByName","parameters":[{"name":"name","in":"path","description":"the dictionary name","required":true,"style":"simple","schema":{"type":"string"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Dictionary"}}}},"responses":{"200":{"description":"Response containing DictionaryResponseEntity object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryResponseEntity"}}}},"201":{"description":"Created"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"delete":{"tags":["Network Access - Dictionary"],"summary":"Network Access - Delete a Dictionary.","description":"Network Access - Delete a Dictionary.","operationId":"deleteNetworkAccessDictionariesByName","parameters":[{"name":"name","in":"path","description":"the dictionary name","required":true,"style":"simple","schema":{"type":"string"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response containing DictionaryResponseEntity object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryResponseEntity"}}}},"204":{"description":"No Content"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/identity-stores":{"get":{"tags":["Network Access - Identity Stores"],"summary":"Network Access - Return list of identity stores for authentication policy definition.","description":"<p>Network Access - Return list of identity stores for authentication policy definition.<br> (Other CRUD APIs available throught ERS)<br></p>","operationId":"getNetworkAccessIdentityStores","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"list of identity stores","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/IdentityStore"}}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/network-condition":{"get":{"tags":["Network Access - Network Conditions"],"summary":"Network Access - Returns a list of network conditions.","description":"Network Access - Returns a list of network conditions.","operationId":"getNetworkAccessNetworkConditions","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"list of network conditions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkConditionListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"post":{"tags":["Network Access - Network Conditions"],"summary":"Network Access - Creates network condition.","description":"Network Access - Creates network condition.","operationId":"postNetworkAccessNetworkCondition","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkCondition"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkConditionResponseEntity"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkConditionResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/network-condition/{conditionId}":{"get":{"tags":["Network Access - Network Conditions"],"summary":"Network Access - Returns a network condition.","description":"Network Access - Returns a network condition.","operationId":"getNetworkAccessNetworkConditionByConditionId","parameters":[{"name":"conditionId","in":"path","description":"Condition id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Network condition","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkConditionResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"put":{"tags":["Network Access - Network Conditions"],"summary":"Network Access - Update network condition.","description":"Network Access - Update network condition.","operationId":"putNetworkAccessNetworkConditionByConditionId","parameters":[{"name":"conditionId","in":"path","description":"Condition id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkCondition"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkConditionResponseEntity"}}}},"201":{"description":"Created"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"delete":{"tags":["Network Access - Network Conditions"],"summary":"Network Access - Delete network condition.","description":"Network Access - Delete network condition.","operationId":"deleteNetworkAccessNetworkConditionByConditionId","parameters":[{"name":"conditionId","in":"path","description":"Condition id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with object ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"204":{"description":"No Content"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/policy-set":{"get":{"tags":["Network Access - Policy Set"],"summary":"Network Access - List of policy sets.","description":"Get all network access policy sets.","operationId":"getNetworkAccessPolicySetList","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"List of network access policy sets","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PolicySetListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"post":{"tags":["Network Access - Policy Set"],"summary":"Network Access - Create a new policy set.","description":"Network Access - Create a new policy set: <ul> <li> Policy must include name , service identifier (either server sequence or allowed protocol) and a condition. </li> <li> Condition has hierarchical structure which define a set of condition for which policy could be match. </li> <li> Condition can be either reference to a stored Library condition, using model <b>ConditionReference</b>, or, dynamically built conditions which are not stored in the conditions Library, using models <b>ConditionAttributes, ConditionAndBlock, ConditionOrBlock</b>.</li> </ul> ","operationId":"createNetworkAccessPolicySet","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PolicySet"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PolicySetResponseEntity"}}}},"201":{"description":"PolicySet response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PolicySetResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/policy-set/global-exception":{"get":{"tags":["Network Access - Authorization Global Exception Rules"],"summary":"Network Access - Get global execption rules.","description":"Network Access - Get global execption rules.","operationId":"getNetworkAccessPolicySetGlobalExceptionRuleList","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Network Access Authorization Rule list response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkAccessAuthorizationRuleListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"post":{"tags":["Network Access - Authorization Global Exception Rules"],"summary":"Network Access - Create global exception authorization rule.","description":"Network Access - Create global exception authorization rule: <ul> <li> Rule must include name and condition. </li> <li> Condition has hierarchical structure which define a set of conditions for which authoriztion policy rule could be match. </li> <li> Condition can be either reference to a stored Library condition, using model <b>ConditionReference</b> </li> or dynamically built conditions which are not stored in the conditions Library, using models <b>ConditionAttributes, ConditionAndBlock, ConditionOrBlock</b>. </li> </ul> ","operationId":"createNetworkAccessPolicySetGlobalExceptionRule","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RuleAuthorizationNetworkAccess"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkAccessAuthorizationRuleResponseEntity"}}}},"201":{"description":"Network Access Authorization Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkAccessAuthorizationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/policy-set/global-exception/reset-hitcount":{"post":{"tags":["Network Access - Authorization Global Exception Rules"],"summary":"Network Access - Reset HitCount for Global Exceptions","description":"Network Access - Reset HitCount for Global Exceptions","operationId":"resetHitCountsNetworkAccessGlobalExceptions","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with success message","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponseEntity"}}}},"201":{"description":"Created"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/policy-set/global-exception/{ruleId}":{"get":{"tags":["Network Access - Authorization Global Exception Rules"],"summary":"Network Access - Get global exception rule attributes.","description":"Network Access - Get global exception rule attributes.","operationId":"getNetworkAccessPolicySetGlobalExceptionRuleById","parameters":[{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Network Access Authorization Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkAccessAuthorizationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"put":{"tags":["Network Access - Authorization Global Exception Rules"],"summary":"Network Access - Update global exception authorization rule.","description":"Network Access - Update global exception authorization rule.","operationId":"updateNetworkAccessPolicySetGlobalExceptionRuleById","parameters":[{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RuleAuthorizationNetworkAccess"}}}},"responses":{"200":{"description":"Network Access Authorization Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkAccessAuthorizationRuleResponseEntity"}}}},"201":{"description":"Created"},"204":{"description":"No Content","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkAccessAuthorizationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"delete":{"tags":["Network Access - Authorization Global Exception Rules"],"summary":"Network Access - Delete global exception authorization rule.","description":"Network Access - Delete global exception authorization rule.","operationId":"deleteNetworkAccessPolicySetGlobalExceptionRuleById","parameters":[{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with object ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"204":{"description":"No Content","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/policy-set/reset-hitcount":{"post":{"tags":["Network Access - Policy Set"],"summary":"Network Access - Reset HitCount for PolicySets","description":"Network Access - Reset HitCount for PolicySets","operationId":"resetHitCountsNetworkAccessPolicySets","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with success message","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponseEntity"}}}},"201":{"description":"Created"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/policy-set/{policyId}":{"get":{"tags":["Network Access - Policy Set"],"summary":"Network Access - Get policy set attributes.","description":"Network Access - Get policy set attributes.","operationId":"getNetworkAccessPolicySetById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"PolicySet response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PolicySetResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"put":{"tags":["Network Access - Policy Set"],"summary":"Network Access - Update a policy set.","description":"Network Access - Update a policy set.","operationId":"updateNetworkAccessPolicySetById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PolicySet"}}}},"responses":{"200":{"description":"PolicySet response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PolicySetResponseEntity"}}}},"201":{"description":"Created"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"delete":{"tags":["Network Access - Policy Set"],"summary":"Network Access - Delete a policy set.","description":"Network Access - Delete a policy set.","operationId":"deleteNetworkAccessPolicySetById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with object ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"204":{"description":"No Content"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/policy-set/{policyId}/authentication":{"get":{"tags":["Network Access - Authentication Rules"],"summary":"Network Access - Get authentication rules.","description":"Network Access - Get authentication rules.","operationId":"getNetworkAccessPolicyByIdAuthenticationRuleList","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Authentication Rule list response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthenticationRuleListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"post":{"tags":["Network Access - Authentication Rules"],"summary":"Network Access - Create authentication rule.","description":"Network Access - Create authentication rule: <ul> <li> Rule must include name and condition. </li> <li> Condition has hierarchical structure which define a set of conditions for which authentication policy rule could be match. </li> <li> Condition can be either reference to a stored Library condition, using model <b>ConditionReference</b> </li> or dynamically built conditions which are not stored in the conditions Library, using models <b>ConditionAttributes, ConditionAndBlock, ConditionOrBlock</b>. </li> </ul> ","operationId":"createNetworkAccessPolicyByIdAuthenticationRule","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RuleAuthentication"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthenticationRuleResponseEntity"}}}},"201":{"description":"Authentication Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthenticationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/policy-set/{policyId}/authentication/reset-hitcount":{"post":{"tags":["Network Access - Authentication Rules"],"summary":"Network Access - Reset HitCount for Authentication Rules","description":"Network Access - Reset HitCount for Authentication Rules","operationId":"resetHitCountsNetworkAccessPolicyByIdAuthenticationRules","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with success message","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponseEntity"}}}},"201":{"description":"Created"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/policy-set/{policyId}/authentication/{ruleId}":{"get":{"tags":["Network Access - Authentication Rules"],"summary":"Network Access - Get rule attributes.","description":"Network Access - Get rule attributes.","operationId":"getNetworkAccessPolicyByIdAuthenticationRuleById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Authentication Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthenticationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"put":{"tags":["Network Access - Authentication Rules"],"summary":"Network Access - Update rule.","description":"Network Access - Update rule.","operationId":"updateNetworkAccessPolicyByIdAuthenticationRuleById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RuleAuthentication"}}}},"responses":{"200":{"description":"Authentication Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthenticationRuleResponseEntity"}}}},"201":{"description":"Created"},"204":{"description":"No Content","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthenticationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"delete":{"tags":["Network Access - Authentication Rules"],"summary":"Network Access - Delete rule.","description":"Network Access - Delete rule.","operationId":"deleteNetworkAccessPolicyByIdAuthenticationRuleById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with object ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"204":{"description":"No Content","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/policy-set/{policyId}/authorization":{"get":{"tags":["Network Access - Authorization Rules"],"summary":"Network Access - Get authorization rules.","description":"Network Access - Get authorization rules.","operationId":"getNetworkAccessPolicyByIdAuthorizationRuleList","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Network Access Authorization Rule list response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkAccessAuthorizationRuleListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"post":{"tags":["Network Access - Authorization Rules"],"summary":"Network Access - Create authorization rule.","description":"Network Access - Create authorization rule: <ul> <li> Rule must include name and condition. </li> <li> Condition has hierarchical structure which define a set of conditions for which authoriztion policy rule could be match. </li> <li> Condition can be either reference to a stored Library condition, using model <b>ConditionReference</b> </li> or dynamically built conditions which are not stored in the conditions Library, using models <b>ConditionAttributes, ConditionAndBlock, ConditionOrBlock</b>. </li> </ul> ","operationId":"createNetworkAccessPolicyByIdAuthorizationRule","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RuleAuthorizationNetworkAccess"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkAccessAuthorizationRuleResponseEntity"}}}},"201":{"description":"Network Access Authorization Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkAccessAuthorizationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/policy-set/{policyId}/authorization/reset-hitcount":{"post":{"tags":["Network Access - Authorization Rules"],"summary":"Network Access - Reset HitCount for Authorization Rules","description":"Network Access - Reset HitCount for Authorization Rules","operationId":"resetHitCountsNetworkAccessPolicyByIdAuthorizationRules","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with success message","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponseEntity"}}}},"201":{"description":"Created"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/policy-set/{policyId}/authorization/{ruleId}":{"get":{"tags":["Network Access - Authorization Rules"],"summary":"Network Access - Get authorization rule attributes.","description":"Network Access - Get authorization rule attributes.","operationId":"getNetworkAccessPolicyByIdAuthorizationRuleById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Network Access Authorization Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkAccessAuthorizationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"put":{"tags":["Network Access - Authorization Rules"],"summary":"Network Access - Update authorization rule.","description":"Network Access - Update authorization rule.","operationId":"updateNetworkAccessPolicyByIdAuthorizationRuleById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RuleAuthorizationNetworkAccess"}}}},"responses":{"200":{"description":"Network Access Authorization Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkAccessAuthorizationRuleResponseEntity"}}}},"201":{"description":"Created"},"204":{"description":"No Content","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkAccessAuthorizationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"delete":{"tags":["Network Access - Authorization Rules"],"summary":"Network Access - Delete authorization rule.","description":"Network Access - Delete authorization rule.","operationId":"deleteNetworkAccessPolicyByIdAuthorizationRuleById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with object ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"204":{"description":"No Content","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/policy-set/{policyId}/exception":{"get":{"tags":["Network Access - Authorization Exception Rules"],"summary":"Network Access - Get local exception rules.","description":"Network Access - Get local exception rules.","operationId":"getNetworkAccessPolicyByIdLocalExceptionRuleList","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Network Access Authorization Rule list response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkAccessAuthorizationRuleListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"post":{"tags":["Network Access - Authorization Exception Rules"],"summary":"Network Access - Create local authorization exception rule.","description":"Network Access - Create local authorization exception rule: <ul> <li> Rule must include name and condition. </li> <li> Condition has hierarchical structure which define a set of conditions for which authoriztion policy rule could be match. </li> <li> Condition can be either reference to a stored Library condition, using model <b>ConditionReference</b> </li> or dynamically built conditions which are not stored in the conditions Library, using models <b>ConditionAttributes, ConditionAndBlock, ConditionOrBlock</b>. </li> </ul> ","operationId":"createNetworkAccessPolicyByIdLocalExceptionRule","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RuleAuthorizationNetworkAccess"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkAccessAuthorizationRuleResponseEntity"}}}},"201":{"description":"Network Access Authorization Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkAccessAuthorizationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/policy-set/{policyId}/exception/reset-hitcount":{"post":{"tags":["Network Access - Authorization Exception Rules"],"summary":"Network Access - Reset HitCount for local exceptions","description":"Network Access - Reset HitCount for local exceptions","operationId":"resetHitCountsNetworkAccessPolicyByIdLocalExceptions","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with success message","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageResponseEntity"}}}},"201":{"description":"Created"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/policy-set/{policyId}/exception/{ruleId}":{"get":{"tags":["Network Access - Authorization Exception Rules"],"summary":"Network Access - Get local exception rule attributes.","description":"Network Access - Get local exception rule attributes.","operationId":"getNetworkAccessPolicyByIdLocalExceptionRuleById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Network Access Authorization Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkAccessAuthorizationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"put":{"tags":["Network Access - Authorization Exception Rules"],"summary":"Network Access - Update local exception rule.","description":"Network Access - Update local exception rule.","operationId":"updateNetworkAccessPolicyByIdLocalExceptionRuleById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RuleAuthorizationNetworkAccess"}}}},"responses":{"200":{"description":"Network Access Authorization Rule response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkAccessAuthorizationRuleResponseEntity"}}}},"201":{"description":"Created"},"204":{"description":"No Content","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetworkAccessAuthorizationRuleResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"delete":{"tags":["Network Access - Authorization Exception Rules"],"summary":"Network Access - Delete local exception rule.","description":"Network Access - Delete local exception rule.","operationId":"deleteNetworkAccessPolicyByIdLocalExceptionRuleById","parameters":[{"name":"policyId","in":"path","description":"Policy id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"ruleId","in":"path","description":"Rule id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with object ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"204":{"description":"No Content","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/profiles":{"get":{"tags":["Network Access - Profiles"],"summary":"Network Access - Returns list of profiles.","description":"<p>Network Access - Returns list of profiles.<br> (Other CRUD APIs available throught ERS)<br></p>","operationId":"getNetworkAccessProfiles","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"list of profiles","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Profile"}}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/security-groups":{"get":{"tags":["Network Access - Security Groups"],"summary":"Network Access - Return list of available security groups for authorization policy definition.","description":"<p>Network Access - Return list of available security groups for authorization policy definition.<br> (Other CRUD APIs available throught ERS)<br></p>","operationId":"getNetworkAccessSecurityGroups","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"list of security groups","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/SecurityGroup"}}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/service-names":{"get":{"tags":["Network Access - Service Names"],"summary":"Network Access - Returns list of allowed protocols and server sequences for Policy Set.","description":"<p>Returns list of Allowed Protocols and Server Sequences for Network Access Policy Set results. <br> 'isLocalAuthorization' property is available only for Network Access Policy Set results of type Server Sequence. <br> (Other CRUD APIs available throught ERS)<br></p>","operationId":"getNetworkAccessServiceNames","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"list of allowed protocols and server sequences","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ServiceName"}}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/time-condition":{"get":{"tags":["Network Access - Time/Date Conditions"],"summary":"Network Access - Returns a list of time and date conditions.","description":"Network Access - Returns a list of time and date conditions.","operationId":"getNetworkAccessTimeConditions","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"list of time/date conditions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TimeAndDateConditionListResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"post":{"tags":["Network Access - Time/Date Conditions"],"summary":"Network Access - Creates time/date condition.","description":"Network Access - Creates time/date condition","operationId":"postNetworkAccessTimeCondition","parameters":[{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TimeAndDateCondition"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TimeAndDateConditionResponseEntity"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TimeAndDateConditionResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"security":[{"BasicAuth":[]}]}},"/api/v1/policy/network-access/time-condition/{conditionId}":{"get":{"tags":["Network Access - Time/Date Conditions"],"summary":"Network Access - returns a network condition.","description":"Network Access - returns a network condition.","operationId":"getNetworkAccessTimeConditionByConditionId","parameters":[{"name":"conditionId","in":"path","description":"Condition id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Network condition","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TimeAndDateConditionResponseEntity"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"put":{"tags":["Network Access - Time/Date Conditions"],"summary":"Network Access - Update network condition.","description":"Network Access - Update network condition","operationId":"putNetworkAccessTimeConditionByConditionId","parameters":[{"name":"conditionId","in":"path","description":"Condition id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TimeAndDateCondition"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TimeAndDateConditionResponseEntity"}}}},"201":{"description":"Created"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]},"delete":{"tags":["Network Access - Time/Date Conditions"],"summary":"Network Access - Delete Time/Date condition.","description":"Network Access - Delete Time/Date condition.","operationId":"deleteNetworkAccessTimeConditionByConditionId","parameters":[{"name":"conditionId","in":"path","description":"Condition id","required":true,"style":"simple","schema":{"type":"string","format":"uuid"}},{"name":"X-Request-ID","in":"header","description":"request Id, will return in the response headers, and appear in logs","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Response with object ID","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IdResponseEntity"}}}},"204":{"description":"No Content"},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"The specified resource was not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"BasicAuth":[]}]}}},"components":{"schemas":{"AuthenticationRuleListResponseEntity":{"title":"AuthenticationRuleListResponseEntity","required":["response","version"],"type":"object","properties":{"response":{"type":"array","example":"[{\"identitySourceName\":\"Internal Endpoints\",\"ifAuthFail\":\"reject\",\"ifProcessFail\":\"drop\",\"ifUserNotFound\":\"reject\",\"rule\":{\"condition\":{\"conditionType\":\"ConditionAttributes\",\"isNegate\":false,\"dictionaryName\":\"Network Access\",\"attributeName\":\"Device IP Address\",\"operator\":\"ipEquals\",\"attributeValue\":\"10.0.10.0\"},\"default\":false,\"hitCounts\":2,\"id\":\"d82952cb-b901-4b09-b363-5ebf39bdbaf9\",\"name\":\"MyRuleName_1\",\"rank\":1,\"state\":\"enabled\"},\"link\":{\"href\":\"https://{{ISE_IP}}/api/v1/policy/{{protocol}}/policy-set/{{policy-id}}/authentication/d82952cb-b901-4b09-b363-5ebf39bdbaaa\",\"rel\":\"self\",\"type\":\"application/json\"}}]","items":{"$ref":"#/components/schemas/RuleAuthentication"}},"version":{"type":"string","example":"1.0.0"}}},"AuthenticationRuleResponseEntity":{"title":"AuthenticationRuleResponseEntity","required":["response","version"],"type":"object","properties":{"response":{"$ref":"#/components/schemas/RuleAuthentication"},"version":{"type":"string","example":"1.0.0"}}},"CommandSet":{"title":"CommandSet","required":["name"],"type":"object","properties":{"id":{"type":"string","format":"uuid","example":"07da6fd8-5abc-4dc4-bcec-df309dbf4d17"},"name":{"type":"string","description":"Command used in Device Admin authorization policies","example":"DenyAllCommands"}}},"Condition":{"title":"Condition","required":["conditionType"],"type":"object","properties":{"conditionType":{"type":"string","description":"<ul><li>Inidicates whether the record is the condition itself(data) or a logical(or,and) aggregation</li> <li>Data type enum(reference,single) indicates than \"conditonId\" OR \"ConditionAttrs\" fields should contain condition data but not both</li> <li>Logical aggreation(and,or) enum indicates that additional conditions are present under the children field</li></ul>","example":"ConditionAttributes","enum":["ConditionAndBlock","ConditionAttributes","ConditionOrBlock","ConditionReference","LibraryConditionAndBlock","LibraryConditionAttributes","LibraryConditionOrBlock","TimeAndDateCondition"]},"isNegate":{"type":"boolean","description":"Indicates whereas this condition is in negate mode","example":false},"link":{"$ref":"#/components/schemas/Link"}},"description":"<ul><li>Hierarchical structure which defines a set of conditions for which authentication or authorization policy rules could be matched.</li> <li>Logical operations(AND, OR) relationship between conditions are supported</li> <li>Each condition can have subconditions with relation to logical operations</li></ul>"},"ConditionAndBlock":{"title":"ConditionAndBlock","properties":{"children":{"type":"array","description":"In case type is andBlock or orBlock addtional conditions will be aggregated under this logical (OR/AND) condition","example":"[{\"name\":\"Radius condition\",\"description\":\"Match only radius requests\",\"id\":\"ad947f38-7063-4da2-8723-652e0ca2ea41\",\"conditionType\":\"ConditionReference\",\"isNegate\":false},{\"name\":\"Tacacs condition\",\"description\":\"Match only tacacs condition\",\"id\":\"ad947f38-7063-4da2-8723-652e0ca2eb52\",\"conditionType\":\"ConditionReference\",\"isNegate\":false}]","items":{"$ref":"#/components/schemas/Condition"}},"conditionType":{"type":"string","description":"<ul><li>Inidicates whether the record is the condition itself(data) or a logical(or,and) aggregation</li> <li>Data type enum(reference,single) indicates than \"conditonId\" OR \"ConditionAttrs\" fields should contain condition data but not both</li> <li>Logical aggreation(and,or) enum indicates that additional conditions are present under the children field</li></ul>","example":"ConditionAttributes","enum":["ConditionAndBlock","ConditionAttributes","ConditionOrBlock","ConditionReference","LibraryConditionAndBlock","LibraryConditionAttributes","LibraryConditionOrBlock","TimeAndDateCondition"]},"isNegate":{"type":"boolean","description":"Indicates whereas this condition is in negate mode","example":false},"link":{"$ref":"#/components/schemas/Link"}},"description":"<ul><li>Hierarchical structure which defines a set of conditions for which authentication or authorization policy rules could be matched.</li> <li>Logical operations(AND, OR) relationship between conditions are supported</li> <li>Each condition can have subconditions with relation to logical operations</li></ul>","allOf":[{"$ref":"#/components/schemas/Condition"},{"title":"ConditionAndBlock","required":["children","conditionType"],"type":"object","properties":{"children":{"type":"array","description":"In case type is andBlock or orBlock addtional conditions will be aggregated under this logical (OR/AND) condition","example":"[{\"name\":\"Radius condition\",\"description\":\"Match only radius requests\",\"id\":\"ad947f38-7063-4da2-8723-652e0ca2ea41\",\"conditionType\":\"ConditionReference\",\"isNegate\":false},{\"name\":\"Tacacs condition\",\"description\":\"Match only tacacs condition\",\"id\":\"ad947f38-7063-4da2-8723-652e0ca2eb52\",\"conditionType\":\"ConditionReference\",\"isNegate\":false}]","items":{"$ref":"#/components/schemas/Condition"}},"conditionType":{"type":"string","description":"<ul><li>Inidicates whether the record is the condition itself(data) or a logical(or,and) aggregation</li> <li>Data type enum(reference,single) indicates than \"conditonId\" OR \"ConditionAttrs\" fields should contain condition data but not both</li> <li>Logical aggreation(and,or) enum indicates that additional conditions are present under the children field</li></ul>","example":"ConditionAttributes","enum":["ConditionAndBlock","ConditionAttributes","ConditionOrBlock","ConditionReference","LibraryConditionAndBlock","LibraryConditionAttributes","LibraryConditionOrBlock","TimeAndDateCondition"]},"isNegate":{"type":"boolean","description":"Indicates whereas this condition is in negate mode","example":false},"link":{"$ref":"#/components/schemas/Link"}},"description":"<ul><li>Hierarchical structure which defines a set of conditions for which authentication or authorization policy rules could be matched.</li> <li>Logical operations(AND, OR) relationship between conditions are supported</li> <li>Each condition can have subconditions with relation to logical operations</li></ul>"}]},"ConditionAttributes":{"title":"ConditionAttributes","properties":{"attributeName":{"type":"string","description":"Dictionary attribute name","example":"UserName"},"attributeValue":{"type":"string","description":"<ul><li>Attribute value for condition</li> <li>Value type is specified in dictionary object</li> <li>if multiple values allowed is specified in dictionary object</li></ul>","example":"cisco"},"conditionType":{"type":"string","description":"<ul><li>Inidicates whether the record is the condition itself(data) or a logical(or,and) aggregation</li> <li>Data type enum(reference,single) indicates than \"conditonId\" OR \"ConditionAttrs\" fields should contain condition data but not both</li> <li>Logical aggreation(and,or) enum indicates that additional conditions are present under the children field</li></ul>","example":"ConditionAttributes","enum":["ConditionAndBlock","ConditionAttributes","ConditionOrBlock","ConditionReference","LibraryConditionAndBlock","LibraryConditionAttributes","LibraryConditionOrBlock","TimeAndDateCondition"]},"dictionaryName":{"type":"string","description":"Dictionary name","example":"Network Access"},"dictionaryValue":{"type":"string","description":"Dictionary value","example":"Radius"},"isNegate":{"type":"boolean","description":"Indicates whereas this condition is in negate mode","example":false},"link":{"$ref":"#/components/schemas/Link"},"operator":{"type":"string","description":"Equality operator","example":"equals","enum":["contains","endsWith","equals","greaterOrEquals","greaterThan","in","ipEquals","ipGreaterThan","ipLessThan","ipNotEquals","lessOrEquals","lessThan","matches","notContains","notEndsWith","notEquals","notIn","notStartsWith","startsWith"]}},"description":"<ul><li>Hierarchical structure which defines a set of conditions for which authentication or authorization policy rules could be matched.</li> <li>Logical operations(AND, OR) relationship between conditions are supported</li> <li>Each condition can have subconditions with relation to logical operations</li></ul>","allOf":[{"$ref":"#/components/schemas/Condition"},{"title":"ConditionAttributes","required":["attributeName","attributeValue","conditionType","dictionaryName","operator"],"type":"object","properties":{"attributeName":{"type":"string","description":"Dictionary attribute name","example":"UserName"},"attributeValue":{"type":"string","description":"<ul><li>Attribute value for condition</li> <li>Value type is specified in dictionary object</li> <li>if multiple values allowed is specified in dictionary object</li></ul>","example":"cisco"},"conditionType":{"type":"string","description":"<ul><li>Inidicates whether the record is the condition itself(data) or a logical(or,and) aggregation</li> <li>Data type enum(reference,single) indicates than \"conditonId\" OR \"ConditionAttrs\" fields should contain condition data but not both</li> <li>Logical aggreation(and,or) enum indicates that additional conditions are present under the children field</li></ul>","example":"ConditionAttributes","enum":["ConditionAndBlock","ConditionAttributes","ConditionOrBlock","ConditionReference","LibraryConditionAndBlock","LibraryConditionAttributes","LibraryConditionOrBlock","TimeAndDateCondition"]},"dictionaryName":{"type":"string","description":"Dictionary name","example":"Network Access"},"dictionaryValue":{"type":"string","description":"Dictionary value","example":"Radius"},"isNegate":{"type":"boolean","description":"Indicates whereas this condition is in negate mode","example":false},"link":{"$ref":"#/components/schemas/Link"},"operator":{"type":"string","description":"Equality operator","example":"equals","enum":["contains","endsWith","equals","greaterOrEquals","greaterThan","in","ipEquals","ipGreaterThan","ipLessThan","ipNotEquals","lessOrEquals","lessThan","matches","notContains","notEndsWith","notEquals","notIn","notStartsWith","startsWith"]}},"description":"<ul><li>Hierarchical structure which defines a set of conditions for which authentication or authorization policy rules could be matched.</li> <li>Logical operations(AND, OR) relationship between conditions are supported</li> <li>Each condition can have subconditions with relation to logical operations</li></ul>"}]},"ConditionOrBlock":{"title":"ConditionOrBlock","properties":{"children":{"type":"array","description":"In case type is andBlock or orBlock addtional conditions will be aggregated under this logical (OR/AND) condition","example":"[{\"name\":\"Radius condition\",\"description\":\"Match only radius requests\",\"id\":\"ad947f38-7063-4da2-8723-652e0ca2ea41\",\"conditionType\":\"ConditionReference\",\"isNegate\":false},{\"name\":\"Tacacs condition\",\"description\":\"Match only tacacs condition\",\"id\":\"ad947f38-7063-4da2-8723-652e0ca2eb52\",\"conditionType\":\"ConditionReference\",\"isNegate\":false}]","items":{"$ref":"#/components/schemas/Condition"}},"conditionType":{"type":"string","description":"<ul><li>Inidicates whether the record is the condition itself(data) or a logical(or,and) aggregation</li> <li>Data type enum(reference,single) indicates than \"conditonId\" OR \"ConditionAttrs\" fields should contain condition data but not both</li> <li>Logical aggreation(and,or) enum indicates that additional conditions are present under the children field</li></ul>","example":"ConditionAttributes","enum":["ConditionAndBlock","ConditionAttributes","ConditionOrBlock","ConditionReference","LibraryConditionAndBlock","LibraryConditionAttributes","LibraryConditionOrBlock","TimeAndDateCondition"]},"isNegate":{"type":"boolean","description":"Indicates whereas this condition is in negate mode","example":false},"link":{"$ref":"#/components/schemas/Link"}},"description":"<ul><li>Hierarchical structure which defines a set of conditions for which authentication or authorization policy rules could be matched.</li> <li>Logical operations(AND, OR) relationship between conditions are supported</li> <li>Each condition can have subconditions with relation to logical operations</li></ul>","allOf":[{"$ref":"#/components/schemas/Condition"},{"title":"ConditionOrBlock","required":["children","conditionType"],"type":"object","properties":{"children":{"type":"array","description":"In case type is andBlock or orBlock addtional conditions will be aggregated under this logical (OR/AND) condition","example":"[{\"name\":\"Radius condition\",\"description\":\"Match only radius requests\",\"id\":\"ad947f38-7063-4da2-8723-652e0ca2ea41\",\"conditionType\":\"ConditionReference\",\"isNegate\":false},{\"name\":\"Tacacs condition\",\"description\":\"Match only tacacs condition\",\"id\":\"ad947f38-7063-4da2-8723-652e0ca2eb52\",\"conditionType\":\"ConditionReference\",\"isNegate\":false}]","items":{"$ref":"#/components/schemas/Condition"}},"conditionType":{"type":"string","description":"<ul><li>Inidicates whether the record is the condition itself(data) or a logical(or,and) aggregation</li> <li>Data type enum(reference,single) indicates than \"conditonId\" OR \"ConditionAttrs\" fields should contain condition data but not both</li> <li>Logical aggreation(and,or) enum indicates that additional conditions are present under the children field</li></ul>","example":"ConditionAttributes","enum":["ConditionAndBlock","ConditionAttributes","ConditionOrBlock","ConditionReference","LibraryConditionAndBlock","LibraryConditionAttributes","LibraryConditionOrBlock","TimeAndDateCondition"]},"isNegate":{"type":"boolean","description":"Indicates whereas this condition is in negate mode","example":false},"link":{"$ref":"#/components/schemas/Link"}},"description":"<ul><li>Hierarchical structure which defines a set of conditions for which authentication or authorization policy rules could be matched.</li> <li>Logical operations(AND, OR) relationship between conditions are supported</li> <li>Each condition can have subconditions with relation to logical operations</li></ul>"}]},"ConditionReference":{"title":"ConditionReference","properties":{"conditionType":{"type":"string","description":"<ul><li>Inidicates whether the record is the condition itself(data) or a logical(or,and) aggregation</li> <li>Data type enum(reference,single) indicates than \"conditonId\" OR \"ConditionAttrs\" fields should contain condition data but not both</li> <li>Logical aggreation(and,or) enum indicates that additional conditions are present under the children field</li></ul>","example":"ConditionAttributes","enum":["ConditionAndBlock","ConditionAttributes","ConditionOrBlock","ConditionReference","LibraryConditionAndBlock","LibraryConditionAttributes","LibraryConditionOrBlock","TimeAndDateCondition"]},"description":{"type":"string","description":"Condition description","readOnly":true,"example":"Match only radius requests"},"id":{"type":"string","description":"UUID for condition","format":"uuid","example":"12345678-f0e7-456b-a2d1-876543320123"},"isNegate":{"type":"boolean","description":"Indicates whereas this condition is in negate mode","example":false},"link":{"$ref":"#/components/schemas/Link"},"name":{"type":"string","description":"Library condition name","readOnly":true,"example":"Radius Condition"}},"description":"<ul><li>Hierarchical structure which defines a set of conditions for which authentication or authorization policy rules could be matched.</li> <li>Logical operations(AND, OR) relationship between conditions are supported</li> <li>Each condition can have subconditions with relation to logical operations</li></ul>","allOf":[{"$ref":"#/components/schemas/Condition"},{"title":"ConditionReference","required":["conditionType","id"],"type":"object","properties":{"conditionType":{"type":"string","description":"<ul><li>Inidicates whether the record is the condition itself(data) or a logical(or,and) aggregation</li> <li>Data type enum(reference,single) indicates than \"conditonId\" OR \"ConditionAttrs\" fields should contain condition data but not both</li> <li>Logical aggreation(and,or) enum indicates that additional conditions are present under the children field</li></ul>","example":"ConditionAttributes","enum":["ConditionAndBlock","ConditionAttributes","ConditionOrBlock","ConditionReference","LibraryConditionAndBlock","LibraryConditionAttributes","LibraryConditionOrBlock","TimeAndDateCondition"]},"description":{"type":"string","description":"Condition description","readOnly":true,"example":"Match only radius requests"},"id":{"type":"string","description":"UUID for condition","format":"uuid","example":"12345678-f0e7-456b-a2d1-876543320123"},"isNegate":{"type":"boolean","description":"Indicates whereas this condition is in negate mode","example":false},"link":{"$ref":"#/components/schemas/Link"},"name":{"type":"string","description":"Library condition name","readOnly":true,"example":"Radius Condition"}},"description":"<ul><li>Hierarchical structure which defines a set of conditions for which authentication or authorization policy rules could be matched.</li> <li>Logical operations(AND, OR) relationship between conditions are supported</li> <li>Each condition can have subconditions with relation to logical operations</li></ul>"}]},"DatesRange":{"title":"DatesRange","required":["endDate","startDate"],"type":"object","properties":{"endDate":{"type":"string","example":"2022-05-10"},"startDate":{"type":"string","example":"2022-05-06"}},"description":"<p>Defines for which date/s TimeAndDate condition will be matched or NOT matched if used in exceptionDates prooperty<br> Options are - Date range, for specific date, the same date should be used for start/end date <br> Default - no specific dates<br> In order to reset the dates to have no specific dates Date format - yyyy-mm-dd (MM = month, dd = day, yyyy = year)</p>"},"DeviceAdminAuthorizationRuleListResponseEntity":{"title":"DeviceAdminAuthorizationRuleListResponseEntity","required":["response","version"],"type":"object","properties":{"response":{"type":"array","example":"[{\"profile\":\"Default Shell Profile\",\"rule\":{\"condition\":{\"conditionType\":\"ConditionAttributes\",\"dictionaryName\":\"Network Access\",\"attributeName\":\"EapAuthentication\",\"operator\":\"equals\",\"attributeValue\":\"EAP-TLS\",\"isNegate\":false},\"default\":false,\"hitCounts\":2,\"id\":\"d82952cb-b901-4b09-b363-5ebf39bdbaf9\",\"name\":\"MyRuleName_1\",\"rank\":1,\"state\":\"enabled\"},\"commands\":[\"DenyAllCommands\"],\"link\":{\"href\":\"https://{{ISE_IP}}/api/v1/policy/device-admin/policy-set/{{policy-id]}}/authorization/d82952cb-b901-4b09-b363-5ebf39bdbaf9\",\"rel\":\"self\",\"type\":\"application/json\"}}]","items":{"$ref":"#/components/schemas/RuleAuthorizationDeviceAdmin"}},"version":{"type":"string","example":"1.0.0"}}},"DeviceAdminAuthorizationRuleResponseEntity":{"title":"DeviceAdminAuthorizationRuleResponseEntity","required":["response","version"],"type":"object","properties":{"response":{"$ref":"#/components/schemas/RuleAuthorizationDeviceAdmin"},"version":{"type":"string","example":"1.0.0"}}},"DeviceCondition":{"title":"DeviceCondition","required":["conditionType","name"],"type":"object","properties":{"conditionType":{"type":"string","description":"This field determines the content of the conditions field","example":"EndstationCondition","enum":["DeviceCondition","DevicePortCondition","EndstationCondition"]},"description":{"type":"string","example":"Network Condition Description"},"deviceGroupList":{"type":"array","description":"<p>This field should contain a tuple with NDG Root, comma, and an NDG (that it under the root).<br> Line format - NDG Root Name, NDG, Port</p>","example":"[\"IPSEC#Is IPSEC Device\",\"Location#All Locations\"]","items":{"type":"string"}},"deviceList":{"type":"array","description":"<p>This field should contain Device Name. The device name must be the same as the name field in a Network Device object. Line format - Device Name</p>","example":"[\"MyDevice1\",\"MyDevice2\"]","items":{"type":"string"}},"id":{"type":"string","format":"uuid","readOnly":true,"example":"07da6fd8-5abc-4dc4-bcec-df309dbf4d17"},"ipAddrList":{"type":"array","description":"<p>This field should contain IP address or subnet.<br> IP address can be IPV4 format (n.n.n.n) or IPV6 format (n:n:n:n:n:n:n:n).<br> IP subnet can be IPV4 format (n.n.n.n/m) or IPV6 format (n:n:n:n:n:n:n:n/m).<br> Line format - IP Address or subnet</p>","example":"[\"1.1.1.1\",\"2.2.2.2\"]","items":{"type":"string"}},"link":{"$ref":"#/components/schemas/Link"},"name":{"type":"string","description":"Network Condition name","example":"My network condition"}},"description":"Unique network conditions to restrict access to the network"},"DevicePortCondition":{"title":"DevicePortCondition","required":["conditionType","name"],"type":"object","properties":{"conditionType":{"type":"string","description":"This field determines the content of the conditions field","example":"EndstationCondition","enum":["DeviceCondition","DevicePortCondition","EndstationCondition"]},"description":{"type":"string","example":"Network Condition Description"},"deviceGroupList":{"type":"array","description":"<p>This field should contain a tuple with NDG Root, comma, and an NDG (that it under the root).<br> Line format - NDG Root Name, NDG, Port</p>","example":"[\"IPSEC#Is IPSEC Device,-ANY-\",\"Location#All Locations,80\"]","items":{"type":"string"}},"deviceList":{"type":"array","description":"<p>This field should contain Device-Name,port-number. The device name must be the same as the name field in a Network Device object.<br> Line format - Device Name,Port</p>","example":"[\"MyDevice1,80\",\"MyDevice2,443\"]","items":{"type":"string"}},"id":{"type":"string","format":"uuid","readOnly":true,"example":"07da6fd8-5abc-4dc4-bcec-df309dbf4d17"},"ipAddrList":{"type":"array","description":"<p>This field should contain IP-address-or-subnet,port number<br> IP address can be IPV4 format (n.n.n.n) or IPV6 format (n:n:n:n:n:n:n:n).<br> IP subnet can be IPV4 format (n.n.n.n/m) or IPV6 format (n:n:n:n:n:n:n:n/m).<br> Line format - IP Address or subnet,Port</p>","example":"[\"1.1.1.1,80\",\"2.2.2.2,443\"]","items":{"type":"string"}},"link":{"$ref":"#/components/schemas/Link"},"name":{"type":"string","description":"Network Condition name","example":"My network condition"}},"description":"Unique network conditions to restrict access to the network"},"Dictionary":{"title":"Dictionary","required":["dictionaryAttrType","name","version"],"type":"object","properties":{"description":{"type":"string","description":"The description of the Dictionary","example":"a dictionary description"},"dictionaryAttrType":{"type":"string","description":"The dictionary attribute type","example":"ENTITY_ATTR","enum":["ENTITY_ATTR","MSG_ATTR","PIP_ATTR"]},"id":{"type":"string","description":"Identifier for the dictionary","format":"uuid","readOnly":true,"example":"12345678-f0e7-456b-a2d1-876543320b17"},"link":{"$ref":"#/components/schemas/Link"},"name":{"type":"string","description":"The dictionary name","example":"my dictionary"},"version":{"type":"string","description":"The dictionary version","example":"1.2"}},"description":"Dictionary POST format"},"DictionaryAttribute":{"title":"DictionaryAttribute","required":["dataType","internalName","name"],"type":"object","properties":{"allowedValues":{"type":"array","description":"all of the allowed values for the dictionary attribute","example":"[{\"key\":\"key1\"},{\"value\":\"value1\"},{\"isDefault\":true}]","items":{"$ref":"#/components/schemas/DictionaryAttributeAllowedValues"}},"dataType":{"type":"string","description":"the data type for the dictionary attribute","example":"IPV6","enum":["BOOLEAN","DATE","FLOAT","INT","IP","IPV4","IPV6","IPV6INTERFACE","IPV6PREFIX","LONG","OCTET_STRING","STRING","UINT64","UNIT32"]},"description":{"type":"string","description":"The description of the Dictionary attribute","example":"a dictionary attribute description"},"dictionaryName":{"type":"string","description":"the name of the dictionary which the dictionary attribute belongs to","example":"my dictionary"},"directionType":{"type":"string","description":"the direction for the useage of the dictionary attribute","readOnly":true,"example":"BOTH","enum":["BOTH","IN","NONE","OUT"]},"id":{"type":"string","description":"Identifier for the dictionary attribute","format":"uuid","readOnly":true,"example":"12345678-f0e7-456b-a2d1-876543320b11"},"internalName":{"type":"string","description":"the internal name of the dictionary attribute","example":"my dictionary attribute internal name"},"name":{"type":"string","description":"The dictionary attribute's name","example":"my dictionary attribute"}},"description":"Dictionary Attribute format"},"DictionaryAttributeAllowedValues":{"title":"DictionaryAttributeAllowedValues","required":["key","value"],"type":"object","properties":{"isDefault":{"type":"boolean","description":"true if this key value is the default between the allowed values of the dictionary attribute","example":true},"key":{"type":"string"},"value":{"type":"string"}}},"DictionaryAttributeListResponseEntity":{"title":"DictionaryAttributeListResponseEntity","required":["response","version"],"type":"object","properties":{"response":{"type":"array","example":"[{\"allowedValues\":[{\"key\":\"key1\",\"value\":\"value1\",\"isDefault\":true}],\"dataType\":\"IPV6\",\"description\":\"a dictionary attribute description\",\"dictionaryName\":\"my dictionary\",\"directionType\":\"BOTH\",\"id\":\"12345678-f0e7-456b-a2d1-876543320b11\",\"internalName\":\"my dictionary attribute internal name\",\"name\":\"my dictionary attribute\"}]","items":{"$ref":"#/components/schemas/DictionaryAttribute"}},"version":{"type":"string","example":"1.0.0"}}},"DictionaryAttributeResponseEntity":{"title":"DictionaryAttributeResponseEntity","required":["response","version"],"type":"object","properties":{"response":{"$ref":"#/components/schemas/DictionaryAttribute"},"version":{"type":"string","example":"1.0.0"}}},"DictionaryListResponseEntity":{"title":"DictionaryListResponseEntity","required":["response","version"],"type":"object","properties":{"response":{"type":"array","example":"[{\"dictionaryAttrType\":\"ENTITY_ATTR\",\"id\":\"12345678-f0e7-456b-a2d1-876543320b11\",\"name\":\"my dictionary\",\"description\":\"a dictionary description\",\"link\":{\"rel\":\"self\",\"href\":\"https://{{ISE_IP}}/api/v1/policy/{{protocol}}/dictionaries/ad947f38-7063-4da2-8723-652e0ca2ea41\",\"type\":\"application/json\"}}]","items":{"$ref":"#/components/schemas/Dictionary"}},"version":{"type":"string","example":"1.0.0"}}},"DictionaryResponseEntity":{"title":"DictionaryResponseEntity","required":["response","version"],"type":"object","properties":{"response":{"$ref":"#/components/schemas/Dictionary"},"version":{"type":"string","example":"1.0.0"}}},"EndstationCondition":{"title":"EndstationCondition","required":["conditionType","name"],"type":"object","properties":{"cliDnisList":{"type":"array","description":"<p>This field should contain a Caller ID (CLI), comma, and Called ID (DNIS).<br> Line format -  Caller ID (CLI), Called ID (DNIS)</p>","example":"[\"00-0E-A6-A7-63-F7,00-0E-A6-A7-63-F8\",\"00-0E-A6-A7-63-F7,-ANY-\"]","items":{"type":"string"}},"conditionType":{"type":"string","description":"This field determines the content of the conditions field","example":"EndstationCondition","enum":["DeviceCondition","DevicePortCondition","EndstationCondition"]},"description":{"type":"string","example":"Network Condition Description"},"id":{"type":"string","format":"uuid","readOnly":true,"example":"07da6fd8-5abc-4dc4-bcec-df309dbf4d17"},"ipAddrList":{"type":"array","description":"<p>This field should contain IP address or subnet.<br> IP address can be IPV4 format (n.n.n.n) or IPV6 format (n:n:n:n:n:n:n:n).<br> IP subnet can be IPV4 format (n.n.n.n/m) or IPV6 format (n:n:n:n:n:n:n:n/m).<br> Line format - IP Address or subnet</p>","example":"[\"1.1.1.1\",\"2.2.2.2\"]","items":{"type":"string"}},"link":{"$ref":"#/components/schemas/Link"},"macAddrList":{"type":"array","description":"<p>This field should contain Endstation MAC address, comma, and Destination MAC addresses.<br> Each Max address must include twelve hexadecimal digits using formats nn:nn:nn:nn:nn:nn or nn-nn-nn-nn-nn-nn or nnnn.nnnn.nnnn or nnnnnnnnnnnn.<br> Line format - Endstation MAC,Destination MAC </p>","example":"[\"00-0E-A6-A7-63-F7,00-0E-A6-A7-63-F8\",\"00-0E-A6-A7-63-F7,-ANY-\",\"-ANY-,00-0E-A6-A7-63-F8\"]","items":{"type":"string"}},"name":{"type":"string","description":"Network Condition name","example":"My network condition"}},"description":"Unique network conditions to restrict access to the network"},"Error":{"title":"Error","type":"object","properties":{"code":{"type":"string","example":"400"},"message":{"type":"string","example":"Bad Request"}}},"HoursRange":{"title":"HoursRange","required":["endTime","startTime"],"type":"object","properties":{"endTime":{"type":"string","example":"15:00"},"startTime":{"type":"string","example":"08:00"}},"description":"<p>Defines for which hours a TimeAndDate condition will be matched or not matched if used in exceptionHours property<br> Time foramt - hh:mm  ( h = hour , mm = minutes ) <br> Default - All Day </p>"},"IdResponseEntity":{"title":"IdResponseEntity","required":["id"],"type":"object","properties":{"id":{"type":"string","format":"uuid","example":"07da6fd8-5abc-4dc4-bcec-df309dbf4d17"}},"description":"response object containing object ID"},"IdentityStore":{"title":"IdentityStore","required":["name"],"type":"object","properties":{"id":{"type":"string","format":"uuid","example":"07da6fd8-5abc-4dc4-bcec-df309dbf4d17"},"name":{"type":"string","example":"Internal Users"}}},"LibraryConditionAndBlock":{"title":"LibraryConditionAndBlock","properties":{"children":{"type":"array","description":"In case type is andBlock or orBlock addtional conditions will be aggregated under this logical (OR/AND) condition","example":"[{\"name\":\"Radius condition\",\"description\":\"Match only radius requests\",\"id\":\"ad947f38-7063-4da2-8723-652e0ca2ea41\",\"conditionType\":\"ConditionReference\",\"isNegate\":false},{\"name\":\"Tacacs condition\",\"description\":\"Match only tacacs condition\",\"id\":\"ad947f38-7063-4da2-8723-652e0ca2eb52\",\"conditionType\":\"ConditionReference\",\"isNegate\":false}]","items":{"$ref":"#/components/schemas/Condition"}},"conditionType":{"type":"string","description":"<ul><li>Inidicates whether the record is the condition itself(data) or a logical(or,and) aggregation</li> <li>Data type enum(reference,single) indicates than \"conditonId\" OR \"ConditionAttrs\" fields should contain condition data but not both</li> <li>Logical aggreation(and,or) enum indicates that additional conditions are present under the children field</li></ul>","example":"ConditionAttributes","enum":["ConditionAndBlock","ConditionAttributes","ConditionOrBlock","ConditionReference","LibraryConditionAndBlock","LibraryConditionAttributes","LibraryConditionOrBlock","TimeAndDateCondition"]},"description":{"type":"string","description":"Condition description","example":"Match only radius requests"},"id":{"type":"string","description":"condition ID","format":"uuid","example":"12345678-f0e7-456b-a2d1-876543320123"},"isNegate":{"type":"boolean","description":"Indicates whereas this condition is in negate mode","example":false},"link":{"$ref":"#/components/schemas/Link"},"name":{"type":"string","description":"Condition name, [Valid characters are alphanumerics, underscore, hyphen, space]","example":"Children conditions OR Block"}},"description":"<ul><li>Hierarchical structure which defines a set of conditions for which authentication or authorization policy rules could be matched.</li> <li>Logical operations(AND, OR) relationship between conditions are supported</li> <li>Each condition can have subconditions with relation to logical operations</li></ul>","allOf":[{"$ref":"#/components/schemas/Condition"},{"title":"LibraryConditionAndBlock","required":["children","conditionType","name"],"type":"object","properties":{"children":{"type":"array","description":"In case type is andBlock or orBlock addtional conditions will be aggregated under this logical (OR/AND) condition","example":"[{\"name\":\"Radius condition\",\"description\":\"Match only radius requests\",\"id\":\"ad947f38-7063-4da2-8723-652e0ca2ea41\",\"conditionType\":\"ConditionReference\",\"isNegate\":false},{\"name\":\"Tacacs condition\",\"description\":\"Match only tacacs condition\",\"id\":\"ad947f38-7063-4da2-8723-652e0ca2eb52\",\"conditionType\":\"ConditionReference\",\"isNegate\":false}]","items":{"$ref":"#/components/schemas/Condition"}},"conditionType":{"type":"string","description":"<ul><li>Inidicates whether the record is the condition itself(data) or a logical(or,and) aggregation</li> <li>Data type enum(reference,single) indicates than \"conditonId\" OR \"ConditionAttrs\" fields should contain condition data but not both</li> <li>Logical aggreation(and,or) enum indicates that additional conditions are present under the children field</li></ul>","example":"ConditionAttributes","enum":["ConditionAndBlock","ConditionAttributes","ConditionOrBlock","ConditionReference","LibraryConditionAndBlock","LibraryConditionAttributes","LibraryConditionOrBlock","TimeAndDateCondition"]},"description":{"type":"string","description":"Condition description","example":"Match only radius requests"},"id":{"type":"string","description":"condition ID","format":"uuid","example":"12345678-f0e7-456b-a2d1-876543320123"},"isNegate":{"type":"boolean","description":"Indicates whereas this condition is in negate mode","example":false},"link":{"$ref":"#/components/schemas/Link"},"name":{"type":"string","description":"Condition name, [Valid characters are alphanumerics, underscore, hyphen, space]","example":"Children conditions OR Block"}},"description":"<ul><li>Hierarchical structure which defines a set of conditions for which authentication or authorization policy rules could be matched.</li> <li>Logical operations(AND, OR) relationship between conditions are supported</li> <li>Each condition can have subconditions with relation to logical operations</li></ul>"}]},"LibraryConditionAttributes":{"title":"LibraryConditionAttributes","properties":{"attributeName":{"type":"string","description":"Dictionary attribute name","example":"UserName"},"attributeValue":{"type":"string","description":"<ul><li>Attribute value for condition</li> <li>Value type is specified in dictionary object</li> <li>if multiple values allowed is specified in dictionary object</li></ul>","example":"cisco"},"conditionType":{"type":"string","description":"<ul><li>Inidicates whether the record is the condition itself(data) or a logical(or,and) aggregation</li> <li>Data type enum(reference,single) indicates than \"conditonId\" OR \"ConditionAttrs\" fields should contain condition data but not both</li> <li>Logical aggreation(and,or) enum indicates that additional conditions are present under the children field</li></ul>","example":"ConditionAttributes","enum":["ConditionAndBlock","ConditionAttributes","ConditionOrBlock","ConditionReference","LibraryConditionAndBlock","LibraryConditionAttributes","LibraryConditionOrBlock","TimeAndDateCondition"]},"description":{"type":"string","description":"Conditiopn description","example":"Match only radius requests"},"dictionaryName":{"type":"string","description":"Dictionary name","example":"Network Access"},"dictionaryValue":{"type":"string","description":"Dictionary value","example":"Radius"},"id":{"type":"string","description":"condition ID","format":"uuid","example":"12345678-f0e7-456b-a2d1-876543320123"},"isNegate":{"type":"boolean","description":"Indicates whereas this condition is in negate mode","example":false},"link":{"$ref":"#/components/schemas/Link"},"name":{"type":"string","description":"Condition name, [Valid characters are alphanumerics, underscore, hyphen, space]","example":"Wired_MAB"},"operator":{"type":"string","description":"Equality operator","example":"equals","enum":["contains","endsWith","equals","greaterOrEquals","greaterThan","in","ipEquals","ipGreaterThan","ipLessThan","ipNotEquals","lessOrEquals","lessThan","matches","notContains","notEndsWith","notEquals","notIn","notStartsWith","startsWith"]}},"description":"<ul><li>Hierarchical structure which defines a set of conditions for which authentication or authorization policy rules could be matched.</li> <li>Logical operations(AND, OR) relationship between conditions are supported</li> <li>Each condition can have subconditions with relation to logical operations</li></ul>","allOf":[{"$ref":"#/components/schemas/Condition"},{"title":"LibraryConditionAttributes","required":["attributeName","attributeValue","conditionType","dictionaryName","name","operator"],"type":"object","properties":{"attributeName":{"type":"string","description":"Dictionary attribute name","example":"UserName"},"attributeValue":{"type":"string","description":"<ul><li>Attribute value for condition</li> <li>Value type is specified in dictionary object</li> <li>if multiple values allowed is specified in dictionary object</li></ul>","example":"cisco"},"conditionType":{"type":"string","description":"<ul><li>Inidicates whether the record is the condition itself(data) or a logical(or,and) aggregation</li> <li>Data type enum(reference,single) indicates than \"conditonId\" OR \"ConditionAttrs\" fields should contain condition data but not both</li> <li>Logical aggreation(and,or) enum indicates that additional conditions are present under the children field</li></ul>","example":"ConditionAttributes","enum":["ConditionAndBlock","ConditionAttributes","ConditionOrBlock","ConditionReference","LibraryConditionAndBlock","LibraryConditionAttributes","LibraryConditionOrBlock","TimeAndDateCondition"]},"description":{"type":"string","description":"Conditiopn description","example":"Match only radius requests"},"dictionaryName":{"type":"string","description":"Dictionary name","example":"Network Access"},"dictionaryValue":{"type":"string","description":"Dictionary value","example":"Radius"},"id":{"type":"string","description":"condition ID","format":"uuid","example":"12345678-f0e7-456b-a2d1-876543320123"},"isNegate":{"type":"boolean","description":"Indicates whereas this condition is in negate mode","example":false},"link":{"$ref":"#/components/schemas/Link"},"name":{"type":"string","description":"Condition name, [Valid characters are alphanumerics, underscore, hyphen, space]","example":"Wired_MAB"},"operator":{"type":"string","description":"Equality operator","example":"equals","enum":["contains","endsWith","equals","greaterOrEquals","greaterThan","in","ipEquals","ipGreaterThan","ipLessThan","ipNotEquals","lessOrEquals","lessThan","matches","notContains","notEndsWith","notEquals","notIn","notStartsWith","startsWith"]}},"description":"<ul><li>Hierarchical structure which defines a set of conditions for which authentication or authorization policy rules could be matched.</li> <li>Logical operations(AND, OR) relationship between conditions are supported</li> <li>Each condition can have subconditions with relation to logical operations</li></ul>"}]},"LibraryConditionListResponseEntity":{"title":"LibraryConditionListResponseEntity","required":["response","version"],"type":"object","properties":{"response":{"type":"array","example":"[{\"name\":\"WirelessMAB\",\"conditionType\":\"LibraryConditionAttributes\",\"description\":\"Match only wireless MAB\",\"dictionaryName\":\"Normalised Radius\",\"attributeName\":\"RadiusFlowType\",\"operator\":\"equals\",\"attributeValue\":\"WirelessMAB\",\"id\":\"ad947f38-7063-4da2-8723-652e0ca2ea41\",\"isNegate\":false,\"link\":{\"rel\":\"self\",\"href\":\"https://{{ISE_IP}}/api/v1/policy/{{protocol}}/condition/ad947f38-7063-4da2-8723-652e0ca2ea41\",\"type\":\"application/json\"}},{\"name\":\"Wired_MAB\",\"conditionType\":\"LibraryConditionAttributes\",\"description\":\"Match only Wired MAB\",\"dictionaryName\":\"Normalised Radius\",\"attributeName\":\"RadiusFlowType\",\"operator\":\"equals\",\"attributeValue\":\"WiredMAB\",\"id\":\"ad947f38-7063-4da2-8723-652e0ca2ea42\",\"isNegate\":false,\"link\":{\"rel\":\"self\",\"href\":\"https://{{ISE_IP}}/api/v1/policy/{{protocol}}/condition/ad947f38-7063-4da2-8723-652e0ca2ea42\",\"type\":\"application/json\"}}]","items":{"$ref":"#/components/schemas/Condition"}},"version":{"type":"string","example":"1.0.0"}}},"LibraryConditionOrBlock":{"title":"LibraryConditionOrBlock","properties":{"children":{"type":"array","description":"In case type is andBlock or orBlock addtional conditions will be aggregated under this logical (OR/AND) condition","example":"[{\"name\":\"Radius condition\",\"description\":\"Match only radius requests\",\"id\":\"ad947f38-7063-4da2-8723-652e0ca2ea41\",\"conditionType\":\"ConditionReference\",\"isNegate\":false},{\"name\":\"Tacacs condition\",\"description\":\"Match only tacacs condition\",\"id\":\"ad947f38-7063-4da2-8723-652e0ca2eb52\",\"conditionType\":\"ConditionReference\",\"isNegate\":false}]","items":{"$ref":"#/components/schemas/Condition"}},"conditionType":{"type":"string","description":"<ul><li>Inidicates whether the record is the condition itself(data) or a logical(or,and) aggregation</li> <li>Data type enum(reference,single) indicates than \"conditonId\" OR \"ConditionAttrs\" fields should contain condition data but not both</li> <li>Logical aggreation(and,or) enum indicates that additional conditions are present under the children field</li></ul>","example":"ConditionAttributes","enum":["ConditionAndBlock","ConditionAttributes","ConditionOrBlock","ConditionReference","LibraryConditionAndBlock","LibraryConditionAttributes","LibraryConditionOrBlock","TimeAndDateCondition"]},"description":{"type":"string","description":"Condition description","example":"Match only radius requests"},"id":{"type":"string","description":"condition ID","format":"uuid","example":"12345678-f0e7-456b-a2d1-876543320123"},"isNegate":{"type":"boolean","description":"Indicates whereas this condition is in negate mode","example":false},"link":{"$ref":"#/components/schemas/Link"},"name":{"type":"string","description":"Condition name, [Valid characters are alphanumerics, underscore, hyphen, space]","example":"Children_Block"}},"description":"<ul><li>Hierarchical structure which defines a set of conditions for which authentication or authorization policy rules could be matched.</li> <li>Logical operations(AND, OR) relationship between conditions are supported</li> <li>Each condition can have subconditions with relation to logical operations</li></ul>","allOf":[{"$ref":"#/components/schemas/Condition"},{"title":"LibraryConditionOrBlock","required":["children","conditionType","name"],"type":"object","properties":{"children":{"type":"array","description":"In case type is andBlock or orBlock addtional conditions will be aggregated under this logical (OR/AND) condition","example":"[{\"name\":\"Radius condition\",\"description\":\"Match only radius requests\",\"id\":\"ad947f38-7063-4da2-8723-652e0ca2ea41\",\"conditionType\":\"ConditionReference\",\"isNegate\":false},{\"name\":\"Tacacs condition\",\"description\":\"Match only tacacs condition\",\"id\":\"ad947f38-7063-4da2-8723-652e0ca2eb52\",\"conditionType\":\"ConditionReference\",\"isNegate\":false}]","items":{"$ref":"#/components/schemas/Condition"}},"conditionType":{"type":"string","description":"<ul><li>Inidicates whether the record is the condition itself(data) or a logical(or,and) aggregation</li> <li>Data type enum(reference,single) indicates than \"conditonId\" OR \"ConditionAttrs\" fields should contain condition data but not both</li> <li>Logical aggreation(and,or) enum indicates that additional conditions are present under the children field</li></ul>","example":"ConditionAttributes","enum":["ConditionAndBlock","ConditionAttributes","ConditionOrBlock","ConditionReference","LibraryConditionAndBlock","LibraryConditionAttributes","LibraryConditionOrBlock","TimeAndDateCondition"]},"description":{"type":"string","description":"Condition description","example":"Match only radius requests"},"id":{"type":"string","description":"condition ID","format":"uuid","example":"12345678-f0e7-456b-a2d1-876543320123"},"isNegate":{"type":"boolean","description":"Indicates whereas this condition is in negate mode","example":false},"link":{"$ref":"#/components/schemas/Link"},"name":{"type":"string","description":"Condition name, [Valid characters are alphanumerics, underscore, hyphen, space]","example":"Children_Block"}},"description":"<ul><li>Hierarchical structure which defines a set of conditions for which authentication or authorization policy rules could be matched.</li> <li>Logical operations(AND, OR) relationship between conditions are supported</li> <li>Each condition can have subconditions with relation to logical operations</li></ul>"}]},"LibraryConditionResponseEntity":{"title":"LibraryConditionResponseEntity","required":["response","version"],"type":"object","properties":{"response":{"$ref":"#/components/schemas/Condition"},"version":{"type":"string","example":"1.0.0"}}},"Link":{"title":"Link","required":["href"],"type":"object","properties":{"href":{"type":"string","example":"https://{{ISE_IP}}/api/v1/policy/{{protocol}}/policy-set/{{resource-id}}"},"rel":{"type":"string","example":"self","enum":["next","previous","self","status"]},"type":{"type":"string","example":"application/json"}}},"MessageResponseEntity":{"title":"MessageResponseEntity","required":["message"],"type":"object","properties":{"message":{"type":"string","example":"Success"}},"description":"Response object containing success message"},"NetworkAccessAuthorizationRuleListResponseEntity":{"title":"NetworkAccessAuthorizationRuleListResponseEntity","required":["response","version"],"type":"object","properties":{"response":{"type":"array","example":"[{\"rule\":{\"default\":true,\"id\":\"c841b537-45fb-4c3a-a1ae-baeb3e4c4271\",\"hitCounts\":0,\"rank\":1,\"state\":\"enabled\",\"condition\":null,\"profile\":[\"DenyAccess\"],\"securityGroup\":null,\"link\":{\"rel\":\"self\",\"href\":\"https://{{ISE_IP}}/api/v1/policy/network-access/policy-set/{{policy-id}}/authorization/c841b537-45fb-4c3a-a1ae-baeb3e4c4271\",\"type\":\"application/json\"}}},{\"rule\":{\"default\":false,\"id\":\"c841b537-45fb-4c3a-a1ae-baeb3e4c427a\",\"name\":\"Authorization Rule 1\",\"hitCounts\":0,\"rank\":0,\"state\":\"enabled\",\"condition\":{\"conditionType\":\"ConditionAttributes\",\"isNegate\":false,\"dictionaryName\":\"Network Access\",\"attributeName\":\"Device IP Address\",\"operator\":\"ipEquals\",\"attributeValue\":\"10.0.10.0\"}},\"profile\":[\"PermitAccess\"],\"securityGroup\":\"BYOD\",\"link\":{\"rel\":\"self\",\"href\":\"https://{{ISE_IP}}/api/v1/policy/network-access/policy-set/{{policy-id}}/authorization/c841b537-45fb-4c3a-a1ae-baeb3e4c427a\",\"type\":\"application/json\"}}]","items":{"$ref":"#/components/schemas/RuleAuthorizationNetworkAccess"}},"version":{"type":"string","example":"1.0.0"}}},"NetworkAccessAuthorizationRuleResponseEntity":{"title":"NetworkAccessAuthorizationRuleResponseEntity","required":["response","version"],"type":"object","properties":{"response":{"$ref":"#/components/schemas/RuleAuthorizationNetworkAccess"},"version":{"type":"string","example":"1.0.0"}}},"NetworkCondition":{"title":"NetworkCondition","required":["conditionType","name"],"type":"object","properties":{"conditionType":{"type":"string","description":"This field determines the content of the conditions field","example":"EndstationCondition","enum":["DeviceCondition","DevicePortCondition","EndstationCondition"]},"description":{"type":"string","example":"Network Condition Description"},"id":{"type":"string","format":"uuid","readOnly":true,"example":"07da6fd8-5abc-4dc4-bcec-df309dbf4d17"},"link":{"$ref":"#/components/schemas/Link"},"name":{"type":"string","description":"Network Condition name","example":"My network condition"}},"description":"Unique network conditions to restrict access to the network"},"NetworkConditionListResponseEntity":{"title":"NetworkConditionListResponseEntity","required":["response","version"],"type":"object","properties":{"response":{"type":"array","example":"[{\"name\":\"Endstation condition 1\",\"id\":\"ad947f38-7063-4da2-8723-652e0ca2ea41\",\"description\":\"Optional description\",\"conditionType\":\"EndstationCondition\",\"ipAddrList\":[\"3.3.3.3\",\"4.4.4.4\"],\"macAddrList\":null,\"cliDnisList\":null,\"link\":{\"rel\":\"self\",\"href\":\"https://{{ISE_IP}}/api/v1/policy/{{protocol}}/network-condition/ad947f38-7063-4da2-8723-652e0ca2ea41\",\"type\":\"application/json\"}},{\"name\":\"Endstation condition 2\",\"id\":\"b79114b5-4a89-41ba-a8fe-d1a5f6d56a43\",\"description\":\"Optional description\",\"conditionType\":\"EndstationCondition\",\"ipAddrList\":[\"1.1.1.1\",\"2.2.2.2\"],\"macAddrList\":[\"00-0E-A6-A7-63-F7,00-0E-A6-A7-63-F8\",\"00-0E-A6-A7-63-F7,-ANY-\"],\"link\":{\"rel\":\"self\",\"href\":\"https://{{ISE_IP}}/api/v1/policy/{{protocol}}/network-condition/ad947f38-7063-4da2-8723-652e0ca2ea42\",\"type\":\"application/json\"}}]","items":{"$ref":"#/components/schemas/NetworkCondition"}},"version":{"type":"string","example":"1.0.0"}}},"NetworkConditionResponseEntity":{"title":"NetworkConditionResponseEntity","required":["response","version"],"type":"object","properties":{"response":{"$ref":"#/components/schemas/NetworkCondition"},"version":{"type":"string","example":"1.0.0"}}},"PolicySet":{"title":"PolicySet","required":["name","serviceName"],"type":"object","properties":{"condition":{"$ref":"#/components/schemas/Condition"},"default":{"type":"boolean","description":"Flag which indicates if this policy set is the default one","readOnly":true,"example":true},"description":{"type":"string","description":"The description for the policy set","example":"My Description"},"hitCounts":{"type":"integer","description":"The amount of times the policy was matched","format":"int32","readOnly":true,"example":5},"id":{"type":"string","description":"Identifier for the policy set","format":"uuid","readOnly":true,"example":"12345678-f0e7-456b-a2d1-876543320b14"},"isProxy":{"type":"boolean","description":"Flag which indicates if the policy set service is of type 'Proxy Sequence' or 'Allowed Protocols'","example":false},"link":{"$ref":"#/components/schemas/Link"},"name":{"type":"string","description":"Given name for the policy set, [Valid characters are alphanumerics, underscore, hyphen, space, period, parentheses]","example":"My_policy_set 1"},"rank":{"type":"integer","description":"The rank(priority) in relation to other policy set. Lower rank is higher priority.","format":"int32","example":0},"serviceName":{"type":"string","description":"Policy set service identifier - Allowed Protocols,Server Sequence..","example":"Default Network Access"},"state":{"type":"string","description":"The state that the policy set is in. A disabled policy set cannot be matched.","example":"enabled","enum":["disabled","enabled","monitor"]}},"description":"Policy set structure"},"PolicySetListResponseEntity":{"title":"PolicySetListResponseEntity","required":["response","version"],"type":"object","properties":{"response":{"type":"array","example":"[{\"default\":false,\"id\":\"793f55af-ad78-4021-bbdc-6286724394f8\",\"name\":\"New Policy Set 1\",\"description\":null,\"hitCounts\":0,\"rank\":0,\"state\":\"enabled\",\"condition\":{\"link\":null,\"conditionType\":\"ConditionReference\",\"isNegate\":false,\"name\":\"Switch_Local_Web_Authentication\",\"id\":\"19d968b0-ebcb-4cdd-98e3-fe02e5521266\",\"description\":\"A condition to match authentication requests for Local Web Authentication from Cisco Catalyst Switches\"},\"serviceName\":\"Default Network Access\",\"isProxy\":false,\"link\":{\"rel\":\"self\",\"href\":\"https://{{ISE_IP}}/api/v1/policy/{{protocol}}/policy-set/793f55af-ad78-4021-bbdc-6286724394f8\",\"type\":\"application/json\"}}]","items":{"$ref":"#/components/schemas/PolicySet"}},"version":{"type":"string","example":"1.0.0"}}},"PolicySetResponseEntity":{"title":"PolicySetResponseEntity","required":["response","version"],"type":"object","properties":{"response":{"$ref":"#/components/schemas/PolicySet"},"version":{"type":"string","example":"1.0.0"}}},"Profile":{"title":"Profile","required":["name"],"type":"object","properties":{"id":{"type":"string","format":"uuid","example":"07da6fd8-5abc-4dc4-bcec-df309dbf4d17"},"name":{"type":"string","example":"Permit Access"}}},"RuleAuthentication":{"title":"RuleAuthentication","type":"object","properties":{"identitySourceName":{"type":"string","description":"Identity source name from the identity stores","example":"Internal Endpoints"},"ifAuthFail":{"type":"string","description":"Action to perform when authentication fails such as Bad credentials, disabled user and so on","example":"reject"},"ifProcessFail":{"type":"string","description":"Action to perform when ISE is uanble to access the identity database","example":"drop"},"ifUserNotFound":{"type":"string","description":"Action to perform when user is not found in any of identity stores","example":"reject"},"link":{"$ref":"#/components/schemas/Link"},"rule":{"$ref":"#/components/schemas/RuleCommon"}},"description":"Rule for authentication in Network Access/Device Admin"},"RuleAuthorizationDeviceAdmin":{"title":"RuleAuthorizationDeviceAdmin","required":["rule"],"type":"object","properties":{"commands":{"type":"array","description":"Command sets enforce the specified list of commands that can be executed by a device administrator","example":"[\"DenyAllCommands\"]","items":{"type":"string"}},"link":{"$ref":"#/components/schemas/Link"},"profile":{"type":"string","description":"Device admin profiles control the initial login session of the device administrator","example":"Default Shell Profile"},"rule":{"$ref":"#/components/schemas/RuleCommon"}},"description":"Authorization rule for device admin"},"RuleAuthorizationNetworkAccess":{"title":"RuleAuthorizationNetworkAccess","required":["rule"],"type":"object","properties":{"link":{"$ref":"#/components/schemas/Link"},"profile":{"type":"array","description":"The authorization profile/s","example":"[\"PermitAccess\",\"NSP_Onboard\"]","items":{"type":"string"}},"rule":{"$ref":"#/components/schemas/RuleCommon"},"securityGroup":{"type":"string","description":"Security group used in authorization policies","example":"BYOD"}},"description":"Authorization rule for network access"},"RuleCommon":{"title":"RuleCommon","required":["name"],"type":"object","properties":{"condition":{"$ref":"#/components/schemas/Condition"},"default":{"type":"boolean","description":"Indicates if this rule is the default one","readOnly":true,"example":false},"hitCounts":{"type":"integer","description":"The amount of times the rule was matched","format":"int32","readOnly":true,"example":2},"id":{"type":"string","description":"The identifier of the rule","format":"uuid","readOnly":true,"example":"d82952cb-b901-4b09-b363-5ebf39bdbaf9"},"name":{"type":"string","description":"Rule name, [Valid characters are alphanumerics, underscore, hyphen, space, period, parentheses]","example":"MyRuleName_1"},"rank":{"type":"integer","description":"The rank(priority) in relation to other rules. Lower rank is higher priority.","format":"int32","example":1},"state":{"type":"string","description":"The state that the rule is in. A disabled rule cannot be matched.","example":"enabled","enum":["disabled","enabled","monitor"]}},"description":"Common attributes in rule authentication/authorization"},"SecurityGroup":{"title":"SecurityGroup","required":["name"],"type":"object","properties":{"id":{"type":"string","format":"uuid","example":"07da6fd8-5abc-4dc4-bcec-df309dbf4d17"},"name":{"type":"string","example":"Auditors"}}},"ServiceName":{"title":"ServiceName","required":["id","name","serviceType"],"type":"object","properties":{"id":{"type":"string","example":"b52df124-cc8c-45e0-b613-79c230227ddb"},"isLocalAuthorization":{"type":"boolean","example":false},"name":{"type":"string","example":"MyServerSequence"},"serviceType":{"type":"string","description":"Allowed Protocols OR Server Sequence","example":"serverSequence","enum":["allowedProtocols","serverSequence"]}}},"TimeAndDateCondition":{"title":"TimeAndDateCondition","required":["conditionType","name"],"type":"object","properties":{"conditionType":{"type":"string","description":"<ul><li>Inidicates whether the record is the condition itself(data) or a logical(or,and) aggregation</li> <li>Data type enum(reference,single) indicates than \"conditonId\" OR \"ConditionAttrs\" fields should contain condition data but not both</li> <li>Logical aggreation(and,or) enum indicates that additional conditions are present under the children field</li></ul>","example":"ConditionAttributes","enum":["ConditionAndBlock","ConditionAttributes","ConditionOrBlock","ConditionReference","LibraryConditionAndBlock","LibraryConditionAttributes","LibraryConditionOrBlock","TimeAndDateCondition"]},"datesRange":{"$ref":"#/components/schemas/DatesRange"},"datesRangeException":{"$ref":"#/components/schemas/DatesRange"},"description":{"type":"string","description":"Condition description","example":"Optional description"},"hoursRange":{"$ref":"#/components/schemas/HoursRange"},"hoursRangeException":{"$ref":"#/components/schemas/HoursRange"},"id":{"type":"string","format":"uuid"},"isNegate":{"type":"boolean","description":"Indicates whereas this condition is in negate mode","example":false},"link":{"$ref":"#/components/schemas/Link"},"name":{"type":"string","description":"Condition name","example":"TimeAndDate Condition"},"weekDays":{"type":"array","description":"<p>Defines for which days this condition will be matched<br> Days format - Arrays of WeekDay enums <br> Default - List of All week days</p>","example":"[\"Sunday\",\"Monday\",\"Tuesday\"]","items":{"type":"string","enum":["Friday","Monday","Saturday","Sunday","Thursday","Tuesday","Wednesday"]}},"weekDaysException":{"type":"array","description":"<p>Defines for which days this condition will NOT be matched<br> Days format - Arrays of WeekDay enums <br> Default - Not enabled</p>","example":"[\"Tuesday\"]","items":{"type":"string","enum":["Friday","Monday","Saturday","Sunday","Thursday","Tuesday","Wednesday"]}}},"description":"Condition based on time and date."},"TimeAndDateConditionListResponseEntity":{"title":"TimeAndDateConditionListResponseEntity","required":["response","version"],"type":"object","properties":{"response":{"type":"array","example":"[{\"name\":\"Time condition 1\",\"conditionType\":\"TimeAndDateCondition\",\"id\":\"ad947f38-7063-4da2-8723-652e0ca2ea41\",\"isNegate\":false,\"description\":\"Optional description\",\"hoursRange\":{\"startTime\":\"8:10\",\"endTime\":\"15:10\"},\"link\":{\"rel\":\"self\",\"href\":\"https://{{ISE_IP}}/api/v1/policy/{{protocol}}/time-condition/ad947f38-7063-4da2-8723-652e0ca2ea41\",\"type\":\"application/json\"}},{\"name\":\"Time condition 2\",\"id\":\"ad947f38-7063-4da2-8723-652e0ca2ea42\",\"conditionType\":\"TimeAndDateCondition\",\"isNegate\":false,\"description\":\"Optional description\",\"DatesRange\":{\"startDate\":\"2025-05-06\",\"endDate\":\"2025-05-10\"},\"link\":{\"rel\":\"self\",\"href\":\"https://{{ISE_IP}}/api/v1/policy/{{protocol}}/time-condition/ad947f38-7063-4da2-8723-652e0ca2ea42\",\"type\":\"application/json\"}}]","items":{"$ref":"#/components/schemas/TimeAndDateCondition"}},"version":{"type":"string","example":"1.0.0"}}},"TimeAndDateConditionResponseEntity":{"title":"TimeAndDateConditionResponseEntity","required":["response","version"],"type":"object","properties":{"response":{"$ref":"#/components/schemas/TimeAndDateCondition"},"version":{"type":"string","example":"1.0.0"}}}},"securitySchemes":{"BasicAuth":{"type":"http","description":"Basic authorization","scheme":"basic"}}}}